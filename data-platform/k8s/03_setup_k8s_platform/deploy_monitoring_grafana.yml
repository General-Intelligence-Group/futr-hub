---
- name: Deploy Grafana
  hosts: localhost
  gather_facts: false

  vars_files:
    - vars/default.yml

  tasks:
    - name: Read default values
      ansible.builtin.include_vars:
        file: default.yml
        name: default

    - name: Read GRAFANA values
      ansible.builtin.include_vars:
        file: monitoring_grafana.yml
        name: monitoring_grafana

    - name: Set default facts for K8S
      ansible.builtin.set_fact:
        k8s_config: "{{ default.K8S_KUBECONFIG }}"
        k8s_context: "{{ default.K8S_CONTEXT }}"
        k8s_namespace: "{{ default.K8S_NAMESPACE_MONITORING }}"

    - name: Set facts for Grafana Helm chart
      ansible.builtin.set_fact:
        monitoring_grafana_helm_repo_name: "{{ monitoring_grafana.HELM_REPO_NAME }}"
        monitoring_grafana_helm_repo_url: "{{ monitoring_grafana.HELM_REPO_URL }}"
        monitoring_grafana_helm_chart_name: "{{ monitoring_grafana.HELM_CHART_NAME }}"
        monitoring_grafana_helm_release_name: "{{ monitoring_grafana.HELM_RELEASE_NAME }}"

    - name: Add grafana Helm repo
      community.kubernetes.helm_repository:
        name: "{{ monitoring_grafana_helm_repo_name }}"
        url: "{{ monitoring_grafana_helm_repo_url }}"

    - name: Install Helm package with values loaded from template
      community.kubernetes.helm:
        name: "{{ monitoring_grafana_helm_release_name }}"
        chart_ref: "{{ monitoring_grafana_helm_repo_name }}/{{ monitoring_grafana_helm_chart_name }}"
        kubeconfig: "{{ k8s_config }}"
        context: "{{ k8s_context }}"
        release_namespace: "{{ k8s_namespace }}"
        update_repo_cache: true
        create_namespace: true
        values: "{{ lookup('template', 'monitoring/grafana-values.yaml.j2') | from_yaml }}"

    - name: Let Grafana a chance to start
      pause:
        seconds: 60

    - name: Ensure temp directory exists
      file:
        path: /tmp/udp/monitoring/prometheus_dashboard_files/
        recurse: yes
        state: directory
        mode: '0755'

    - name: Copy Dashboard Folder
      copy:
        src: monitoring/prometheus_dashboard_files/
        dest: /tmp/udp/monitoring/prometheus_dashboard_files/
        mode: '0666'

    - name: Create a folder
      community.grafana.grafana_folder:
        url: "https://{{ monitoring_grafana.ingress_server_name }}.{{ DOMAIN }}"
        url_username: "{{ monitoring_grafana.admin_user }}"
        url_password: "{{ monitoring_grafana.admin_password }}"
        title: "Prometheus"
        state: present

    - name: (Re-)Import Grafana Dashboards
      community.grafana.grafana_dashboard:
            grafana_url: "https://{{ monitoring_grafana.ingress_server_name }}.{{ DOMAIN }}"
            url_username: "{{ monitoring_grafana.admin_user }}"
            url_password: "{{ monitoring_grafana.admin_password }}"
            folder: "Prometheus"
            state: present
            commit_message: Updated by ansible
            overwrite: yes
            path: "{{ item }}"
      with_fileglob:
        - "/tmp/udp/monitoring/prometheus_dashboard_files/*.json"

    - name: Create loki datasource
      community.grafana.grafana_datasource:
        name: "Loki"
        grafana_url: "https://{{ monitoring_grafana.ingress_server_name }}.{{ DOMAIN }}"
        grafana_user: "{{ monitoring_grafana.admin_user }}"
        grafana_password: "{{ monitoring_grafana.admin_password }}"
        org_id: "1"
        ds_type: "loki"
        access: proxy
        ds_url: "http://monitoring-loki:3100"
