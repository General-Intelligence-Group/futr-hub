---
# file: 03_setup_k8s_platform/update_qgis_project_playbook.yml

- name: Update QGIS Server project file
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Read default values
      ansible.builtin.include_vars:
        file: default.yml
        name: default

    - name: Read QGIS Server values
      ansible.builtin.include_vars:
        file: webgis_qgisserver.yml
        name: qgisserver

    - name: Set default facts for K8S
      ansible.builtin.set_fact:
        k8s_config: "{{ default.K8S_KUBECONFIG }}"
        k8s_context: "{{ default.K8S_CONTEXT }}"
        k8s_namespace: "{{ default.K8S_NAMESPACE_GEODATA }}"
        kubectl_pid_file: "/tmp/kubectl_pid"

    - name: Set facts for QGIS Server
      ansible.builtin.set_fact:
        qgisserver_project_file: "{{ qgisserver.env_QGIS_PROJECT_FILE }}"

    - name: Check for Secret gitlab-registry in Namespace "{{ k8s_namespace }}"
      community.kubernetes.k8s_info:
        api_version: v1
        kind: Secret
        name: "gitlab-registry"
        namespace: "{{ k8s_namespace }}"
        kubeconfig: "{{ k8s_config }}"
        context: "{{ k8s_context }}"
      register: gitlab_registry_secret

    - name: Get deployment info of QGIS Server
      community.kubernetes.k8s_info:
        kubeconfig: "{{ k8s_config }}"
        context: "{{ k8s_context }}"
        namespace: "{{ k8s_namespace }}"
        kind: Deployment
        label_selectors:
          - app=webgis-qgisserver
          - component=server
      register: qgis_server_deployment_info

    - debug:
        msg: "Name of deployment: {{ qgis_server_deployment_info['resources'][0]['metadata']['name'] }}"

    - name: Get name of QGIS Server deployment
      ansible.builtin.set_fact:
        qgis_server_deployment_name: "{{ qgis_server_deployment_info['resources'][0]['metadata']['name'] }}"
      when: qgis_server_deployment_info is defined

    - name: Restart deployment of QGIS Server
      ansible.builtin.shell: |
        kubectl --kubeconfig="{{ k8s_config }}" --namespace "{{ k8s_namespace | lower }}" rollout restart deployment "{{ qgis_server_deployment_name }}"
      args:
        executable: /bin/bash
      when:
        - qgis_server_deployment_name is defined

    # After redeployment, we have to
    # - wait until the new Pod, running QGIS Server component server, has been created.
    # - create /home/qgis/.pg_service.conf in Pod running QGIS Server component server.
    - name: Wait till new QGIS Server Pod is up and running
      community.kubernetes.k8s_info:
        kubeconfig: "{{ k8s_config }}"
        context: "{{ k8s_context }}"
        namespace: "{{ k8s_namespace }}"
        kind: Pod
        label_selectors:
          - app.kubernetes.io/instance=geodata-qgisserver
          - app=webgis-qgisserver
          - component=server
        wait: yes
        wait_sleep: 10
        wait_timeout: 600

    - name: Get Pod running QGIS Server component server
      community.kubernetes.k8s_info:
        kubeconfig: "{{ k8s_config }}"
        context: "{{ k8s_context }}"
        namespace: "{{ k8s_namespace }}"
        kind: Pod
        label_selectors:
          - app.kubernetes.io/instance=geodata-qgisserver
          - app=webgis-qgisserver
          - component=server
      register: qgis_server_server_pod_info

    - name: Get name of Pod running QGIS Server component server
      ansible.builtin.set_fact:
        qgis_server_server_pod_name: "{{ qgis_server_server_pod_info['resources'][0]['metadata']['name'] }}"
      when: qgis_server_server_pod_info is defined

    - debug:
        msg: "Name of HTTP Pod: {{ qgis_server_http_pod_name }}"

    - debug:
        msg: "Name of Server Pod: {{ qgis_server_server_pod_name }}"

    - name: Create /home/qgis/.pg_service.conf in Pod running QGIS Server component server
      ansible.builtin.shell: |
        kubectl --kubeconfig {{ k8s_config }} -n {{ k8s_namespace | lower }} exec {{ qgis_server_server_pod_name }} -- bash -c "cat {{ qgisserver.pgservicefile_dir }}/{{ qgisserver.pgservicefile }} > /home/qgis/.pg_service.conf"
      args:
        executable: /bin/bash
      when: qgis_server_server_pod_name is defined

