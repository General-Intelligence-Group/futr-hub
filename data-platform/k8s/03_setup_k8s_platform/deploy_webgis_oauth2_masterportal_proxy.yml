---
- name: Deploy OAuth2 Proxy
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Read default values
      ansible.builtin.include_vars:
        file: default.yml
        name: default

    - name: Read OAuth2 Proxy values
      ansible.builtin.include_vars:
        file: webgis_oauth2_masterportal_proxy.yml
        name: mpoauth2proxy

    - name: Set default facts for K8S
      ansible.builtin.set_fact:
        k8s_config: "{{ default.K8S_KUBECONFIG }}"
        k8s_context: "{{ default.K8S_CONTEXT }}"
        k8s_namespace: "{{ default.K8S_NAMESPACE_PUBLIC }}"

    - name: Set facts for ChartMuseum
      ansible.builtin.set_fact:
        cm_port: "{{ default.CM_PORT }}"
        cm_storage: "{{ default.CM_STORAGE }}"
        cm_storage_local_rootdir: "{{ default.CM_STORAGE_LOCAL_ROOTDIR }}"
        cm_context_path: "{{ default.CM_CONTEXT_PATH }}"
        helm_repo_url: "{{ default.HELM_REPO_URL }}"
        helm_repo_name: "{{ default.HELM_REPO_NAME }}"

    - name: Set facts for OAuth2 Proxy Helm chart
      ansible.builtin.set_fact:
        mpoauth2proxy_helm_repo_name: "{{ mpoauth2proxy.HELM_REPO_NAME }}"
        mpoauth2proxy_helm_repo_url: "{{ mpoauth2proxy.HELM_REPO_URL }}"
        mpoauth2proxy_helm_chart_name: "{{ mpoauth2proxy.HELM_CHART_NAME }}"
        mpoauth2proxy_helm_release_name: "{{ mpoauth2proxy.HELM_RELEASE_NAME }}"

    - name: Add OAuth2 Proxy Helm repo
      community.kubernetes.helm_repository:
        name: "{{ mpoauth2proxy_helm_repo_name }}"
        url: "{{ mpoauth2proxy_helm_repo_url }}"

    - name: Re-Login to keycloak
      uri:
        method: POST
        url: "https://idm.{{ DOMAIN }}/auth/realms/master/protocol/openid-connect/token"
        return_content: yes
        body_format: form-urlencoded
        body:
            grant_type: "password"
            client_id: "admin-cli"
            username: "{{ ADMIN_USERNAME }}"
            password: "{{ ADMIN_PASSWORD }}"
        status_code: 200
      register: keycloak_login

    - name: Get clients
      uri:
        method: GET
        url: "https://idm.{{ DOMAIN }}/auth/admin/realms/{{ IDM_REALM }}/clients"
        return_content: yes
        headers:
          Accept: application/json
          Authorization: Bearer {{ keycloak_login.json.access_token }}
        status_code: 200
      register: clients

    - name: "Get keycloak client Masterportal ID."
      set_fact:
        client_id_masterportal: "{{ clients.json | json_query(query) }}"
      vars:
        query: "[?clientId== '{{ default.IDM_CLIENT_MASTERPORTAL }}'].id | [0]"

    - name: Get Client Secret Masterportal
      uri:
        method: GET
        url: "https://idm.{{ DOMAIN }}/auth/admin/realms/{{ IDM_REALM }}/clients/{{ client_id_masterportal }}/client-secret"
        return_content: yes
        headers:
          Accept: application/json
          Authorization: Bearer {{ keycloak_login.json.access_token }}
        status_code: 200
      register: keycloak_client_masterportal_secret_response

    - name: "Set IDM client secret Masterportal."
      set_fact:
        IDM_CLIENT_SECRET_MASTERPORTAL: "{{ keycloak_client_masterportal_secret_response.json.value }}"
        cacheable: yes

    - name: Install Helm package with values loaded from template
      community.kubernetes.helm:
        name: "{{ mpoauth2proxy_helm_release_name }}"
        chart_ref: "{{ mpoauth2proxy_helm_repo_name }}/{{ mpoauth2proxy_helm_chart_name }}"
        kubeconfig: "{{ k8s_config }}"
        context: "{{ k8s_context }}"
        release_namespace: "{{ k8s_namespace }}"
        update_repo_cache: true
        create_namespace: true
        values: "{{ lookup('template', 'templates/public/oauth2-proxy-masterportal_values.yaml.j2') | from_yaml }}"
