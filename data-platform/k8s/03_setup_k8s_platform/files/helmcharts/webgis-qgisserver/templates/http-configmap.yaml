{{- $tier := "server" -}}
{{- $fullName := include "webgis-qgisserver.fullname" (merge (dict "tier" $tier) .) -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.nginx.qgis_conf | quote }}
data:
  default.conf: |
    server {
      listen {{ .Values.qgis.http.ports.servicePort }};
      server_name {{ .Values.nginx.server_name }};

      location /ogc/ {
        rewrite ^/ogc/(.*)$ /qgis/qgis_mapserv.fcgi?map=/data/qgis/$1/project.qgs;
      }

      location /qgis {
        proxy_buffers 16 16k;
        proxy_buffer_size 16k;
        gzip off;
        include fastcgi_params;
        fastcgi_pass {{ $fullName }}:{{ .Values.qgis.server.ports.servicePort }};
        fastcgi_param PGSERVICEFILE {{ .Values.qgis.pgservicefile_dir}}/{{ .Values.qgis.pgservicefile}};

        if ($request_method = 'OPTIONS') {
          add_header 'Access-Control-Allow-Origin' '{{ .Values.nginx.cors_origin }}';
          add_header 'Access-Control-Allow-Credentials' 'true';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          #
          # Custom headers and headers various browsers *should* be OK with but aren't
          #
          add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
          #
          # Tell client that this pre-flight info is valid for 20 days
          #
          add_header 'Access-Control-Max-Age' 1728000;
          add_header 'Content-Type' 'text/plain; charset=utf-8';
          add_header 'Content-Length' 0;
          return 204;
        }

        if ($request_method = 'POST') {
          add_header 'Access-Control-Allow-Origin' '{{ .Values.nginx.cors_origin }}' always;
          add_header 'Access-Control-Allow-Credentials' 'true' always;
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
          add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
          add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }

        if ($request_method = 'GET') {
          add_header 'Access-Control-Allow-Origin' '{{ .Values.nginx.cors_origin }}' always;
          add_header 'Access-Control-Allow-Credentials' 'true' always;
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
          add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
          add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }
      }
    }
