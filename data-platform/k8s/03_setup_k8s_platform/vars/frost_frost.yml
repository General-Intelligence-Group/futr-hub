---
# file: 03_setup_k8s_platform/vars/frost_frost.yml

HELM_REPO_NAME: fraunhoferiosb
HELM_REPO_URL: https://fraunhoferiosb.github.io/helm-charts/
HELM_CHART_NAME: frost-server
HELM_RELEASE_NAME: frost-server

# FROST settings
name: frost-server
frost_enableActuation: true
frost_http_replicas: 1
frost_http_ports_http_nodePort: 30888
frost_http_ports_http_servicePort: 80
frost_http_ingress_enabled: true
frost_http_ingress_rewriteAnnotation: nginx.ingress.kubernetes.io/rewrite-target
frost_http_ingress_rewriteTraget: /FROST-Server/$1
frost_http_ingress_path: /(.*)
frost_http_serviceHost: frost-server-frost-server-http.frost-server
frost_http_serviceProtocol: http
frost_http_servicePort: null
frost_http_urlSubPath: null
frost_http_defaultCount: false
frost_http_defaultTop: 100
frost_http_maxTop: 1000
frost_http_maxDataSize: 25000000
frost_http_useAbsoluteNavigationLinks: true
frost_http_db_autoUpdate: true
frost_http_db_alwaysOrderbyId: false
frost_http_db_maximumConnection: 10
frost_http_db_maximumIdleConnection: 10
frost_http_db_minimumIdleConnection: 10
frost_http_bus_sendWorkerPoolSize: 10
frost_http_bus_sendQueueSize: 100
frost_http_bus_recvWorkerPoolSize: 10
frost_http_bus_recvQueueSize: 100
frost_http_bus_maxInFlight: 50
frost_http_image_registry: docker.io
frost_http_image_repository: fraunhoferiosb/frost-server-http
frost_http_image_tag: 1.13.1
frost_http_image_pullPolicy: IfNotPresent
frost_db_ports_postgresql_servicePort: 5432
frost_db_persistence_enabled: false
frost_db_persistence_existingClaim: null
frost_db_persistence_storageClassName: null
frost_db_persistence_accessModes: ReadWriteOnce
frost_db_persistence_capacity: 10Gi
frost_db_persistence_local_nodeMountPath: /mnt/frost-server-db
# NOTE: the value of frost_db_password will be replaced with the password, created by Zalando PostgreSQL operator)
frost_db_database: "sensorthings"
frost_db_username: "{{ FROST_DB_USERNAME }}"
frost_db_password: "{{ FROST_DB_PASSWORD }}"
frost_db_idGenerationMode: ServerGeneratedOnly
frost_db_implementationClass: de.fraunhofer.iosb.ilt.sta.persistence.postgres.longid.PostgresPersistenceManagerLong
frost_db_image_registry: docker.io
frost_db_image_repository: postgis/postgis
frost_db_image_tag: 11-2.5-alpine
frost_db_image_pullPolicy: IfNotPresent
frost_mqtt_enabled: true
frost_mqtt_replicas: 1
frost_mqtt_ports_mqtt_nodePort:
frost_mqtt_ports_mqtt_servicePort: 1833
frost_mqtt_ports_websocket_nodePort:
frost_mqtt_ports_websocket_servicePort: 9876
frost_mqtt_stickySessionTimeout: 10800
frost_mqtt_qos: 2
frost_mqtt_subscribeMessageQueueSize: 100
frost_mqtt_subscribeThreadPoolSize: 10
frost_mqtt_createMessageQueueSize: 100
frost_mqtt_createThreadPoolSize: 10
frost_mqtt_maxInFlight: 50
frost_mqtt_waitForEnter: false
frost_mqtt_db_alwaysOrderbyId: false
frost_mqtt_db_maximumConnection: 10
frost_mqtt_db_maximumIdleConnection: 10
frost_mqtt_db_minimumIdleConnection: 10
frost_mqtt_bus_sendWorkerPoolSize: 10
frost_mqtt_bus_sendQueueSize: 100
frost_mqtt_bus_recvWorkerPoolSize: 10
frost_mqtt_bus_recvQueueSize: 100
frost_mqtt_bus_maxInFlight: 50
frost_mqtt_image_registry: docker.io
frost_mqtt_image_repository: fraunhoferiosb/frost-server-mqtt
frost_mqtt_image_tag: 1.13.1
frost_mqtt_image_pullPolicy: IfNotPresent
frost_bus_ports_bus_servicePort: 1883
frost_bus_implementationClass: de.fraunhofer.iosb.ilt.sta.messagebus.MqttMessageBus
frost_bus_topicName: FROST-Bus
frost_bus_qosLevel: 2
frost_bus_image_registry: docker.io
frost_bus_image_repository: eclipse-mosquitto
frost_bus_image_tag: 1.4.12
frost_bus_image_pullPolicy: IfNotPresent
