---
- name: Deploy Timescale
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Read default values
      ansible.builtin.include_vars:
        file: default.yml
        name: default

    - name: Read POSTGRES values
      ansible.builtin.include_vars:
        file: postgres_operator.yml
        name: postgres

    - name: Read Timescale values
      ansible.builtin.include_vars:
        file: data_management_timescale.yml
        name: timescale

    - name: Set default facts for K8S
      ansible.builtin.set_fact:
        k8s_config: "{{ default.K8S_KUBECONFIG }}"
        k8s_context: "{{ default.K8S_CONTEXT }}"
        k8s_namespace: "{{ default.K8S_NAMESPACE_DATA_MANAGEMENT }}"

    - name: Create a k8s namespace
      community.kubernetes.k8s:
        name: "{{ default.K8S_NAMESPACE_DATA_MANAGEMENT }}"
        kubeconfig: "{{ k8s_config }}"
        context: "{{ k8s_context }}"
        api_version: v1
        kind: Namespace
        state: present

    - name: Deploy TimescaleDefinition
      community.kubernetes.k8s:
        state: present
        namespace: "{{ k8s_namespace }}"
        kubeconfig: "{{ k8s_config }}"
        context: "{{ k8s_context }}"
        definition:
          kind: "postgresql"
          apiVersion: "acid.zalan.do/v1"
          metadata:
            name: "{{ timescale.cluster_team }}-{{ timescale.cluster_name }}"
            namespace: "{{ k8s_namespace }}"
            labels:
              team: "{{ timescale.cluster_team }}"
          spec:
            teamId: "{{ timescale.cluster_team }}"
            postgresql:
              version: "11"
            numberOfInstances: 2
            enableMasterLoadBalancer: false
            volume:
              size: "20Gi"
            users:
              quantumleap: []
            databases:
              quantumleap: quantumleap
            allowedSourceRanges:
              # IP ranges to access your cluster go here
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                cpu: 500m
                memory: 500Mi
            patroni:
              pg_hba:
                - local     all           all                     trust
                - hostssl   all           +zalandos 127.0.0.1/32  pam
                - host      all           all       127.0.0.1/32  md5
                - hostssl   all           +zalandos ::1/128       pam
                - host      all           all       ::1/128       md5
                - hostssl   replication   standby   all           md5
                - hostnossl all           all       10.0.0.0/8    md5
                - hostnossl all           all       10.0.0.0/8    pam
                - hostssl   all           +zalandos all           pam
                - hostssl   all           all       all           md5

    - name: Create postgis extension
      block:
        - name: _Create postgis extension_ Try cluster-0 resource
          command: |
            kubectl --kubeconfig {{ k8s_config }} -n {{ k8s_namespace }}
              exec {{ timescale.cluster_team }}-{{ timescale.cluster_name }}-0
              -- bash -c "psql -U {{ postgres.super_username }} -d quantumleap -c 'CREATE EXTENSION IF NOT EXISTS postgis;'"
          register: result
          until: result.rc == 0
          retries: 5
          delay: 20
          changed_when: True
      rescue:
        - name: _Create postgis extension_ Try cluster-1 resource
          command: |
            kubectl --kubeconfig {{ k8s_config }} -n {{ k8s_namespace }}
              exec {{ timescale.cluster_team }}-{{ timescale.cluster_name }}-1
              -- bash -c "psql -U {{ postgres.super_username }} -d quantumleap -c 'CREATE EXTENSION IF NOT EXISTS postgis;'"
          register: result
          until: result.rc == 0
          retries: 5
          delay: 20
          changed_when: True

    - name: Create timescale extension
      block:
        - name: _Create timescale extension_ Try cluster-0 resource
          command: |
            kubectl --kubeconfig {{ k8s_config }} -n {{ k8s_namespace }}
              exec {{ timescale.cluster_team }}-{{ timescale.cluster_name }}-0
              -- bash -c "psql -U {{ postgres.super_username }} -d quantumleap -c 'CREATE EXTENSION IF NOT EXISTS timescaledb;'"
          register: result
          until: result.rc == 0
          retries: 5
          delay: 20
          changed_when: True
      rescue:
        - name: _Create timescale extension_ Try cluster-1 resource
          command: |
            kubectl --kubeconfig {{ k8s_config }} -n {{ k8s_namespace }}
              exec {{ timescale.cluster_team }}-{{ timescale.cluster_name }}-1
              -- bash -c "psql -U {{ postgres.super_username }} -d quantumleap -c 'CREATE EXTENSION IF NOT EXISTS timescaledb;'"
          register: result
          until: result.rc == 0
          retries: 5
          delay: 20
          changed_when: True

