- name: "Wait for Keycloak to come up."
  uri:
    url: "https://idm.{{ DOMAIN }}/auth"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 50
  delay: 10

- name: Get Admin credentials
  community.kubernetes.k8s_info:
    namespace: '{{ default.K8S_NAMESPACE_IDMSTACK | lower }}'
    kubeconfig: '{{ k8s_config }}'
    context: '{{ k8s_context }}'
    kind: Secret
    name: '{{ IDM_ADMIN_K8S_SECRET_NAME }}'
  register: admin_credentials

- name: Store IDM Credentials
  set_fact:
    ADMIN_USERNAME: "{{ admin_credentials.resources[0].data.MASTER_USERNAME | b64decode }}"
    ADMIN_PASSWORD: "{{ admin_credentials.resources[0].data.MASTER_PASSWORD | b64decode }}"
    cacheable: yes

- name: Login to keycloak
  uri:
    method: POST
    url: "https://idm.{{ DOMAIN }}/auth/realms/master/protocol/openid-connect/token"
    return_content: yes
    body_format: form-urlencoded
    body:
        grant_type: "password"
        client_id: "admin-cli"
        username: "{{ ADMIN_USERNAME }}"
        password: "{{ ADMIN_PASSWORD }}"
    status_code: 200
  register: keycloak_login

- name: Get clients
  uri:
    method: GET
    url: "https://idm.{{ DOMAIN }}/auth/admin/realms/{{ IDM_REALM }}/clients"
    return_content: yes
    headers:
      Accept: application/json
      Authorization: Bearer {{ keycloak_login.json.access_token }}
    status_code: 200
  register: clients

- name: "Get keycloak client API Access ID."
  set_fact:
    client_id_api_access: "{{ clients.json | json_query(query) }}"
  vars:
    query: "[?clientId== '{{ IDM_CLIENT_API_ACCESS }}'].id | [0]"

- name: "Get keycloak client Gravitee ID."
  set_fact:
    client_id_gravitee: "{{ clients.json | json_query(query) }}"
  vars:
    query: "[?clientId== '{{ IDM_CLIENT_GRAVITEE }}'].id | [0]"

- name: Get Client Secret API Access
  uri:
    method: GET
    url: "https://idm.{{ DOMAIN }}/auth/admin/realms/{{ IDM_REALM }}/clients/{{ client_id_api_access }}/client-secret"
    return_content: yes
    headers:
      Accept: application/json
      Authorization: Bearer {{ keycloak_login.json.access_token }}
    status_code: 200
  register: keycloak_client_api_access_secret_response

- name: Get Client Secret Gravitee
  uri:
    method: GET
    url: "https://idm.{{ DOMAIN }}/auth/admin/realms/{{ IDM_REALM }}/clients/{{ client_id_gravitee }}/client-secret"
    return_content: yes
    headers:
      Accept: application/json
      Authorization: Bearer {{ keycloak_login.json.access_token }}
    status_code: 200
  register: keycloak_client_gravitee_secret_response

- name: "Set IDM client secret API Access."
  set_fact:
    IDM_CLIENT_SECRET_API_ACCESS: "{{ keycloak_client_api_access_secret_response.json.value }}"
    cacheable: yes

- name: "Set IDM client secret Gravitee."
  set_fact:
    IDM_CLIENT_SECRET_GRAVITEE: "{{ keycloak_client_gravitee_secret_response.json.value }}"
    cacheable: yes