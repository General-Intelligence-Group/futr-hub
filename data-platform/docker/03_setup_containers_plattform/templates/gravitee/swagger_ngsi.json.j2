{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"version\": \"1.0\",\n    \"title\": \"FIWARE-NGSI v2 Specification\",\n    \"description\": \"FIWARE-NGSI v2 Specification\"\n  },\n  \"host\": \"apigw.{{ DOMAIN }}{{ orion_api_publicPath }}\",\n  \"basePath\": \"/\",\n  \"schemes\": [\n    \"http\"\n  ],\n  \"consumes\": [\n    \"application/json\"\n  ],\n  \"produces\": [\n    \"application/json\"\n  ],\n  \"paths\": {\n    \"/v2\": {\n      \"get\": {\n        \"description\": \"This resource does not have any attributes. Instead it offers the initial\\nAPI affordances in the form of the links in the JSON body.\\nIt is recommended to follow the \\u201curl\\u201d link values,\\n[Link](https://tools.ietf.org/html/rfc5988) or Location headers where\\napplicable to retrieve resources. Instead of constructing your own URLs,\\nto keep your client decoupled from implementation details.\",\n        \"summary\": \"Retrieve API Resources\",\n        \"tags\": [\n          \"API Entry Point\"\n        ],\n        \"operationId\": \"Retrieve API Resources\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/RetrieveApiResourcesResponse\"\n            },\n            \"examples\": {\n              \"application/json\": {\n                \"entities_url\": \"/v2/entities\",\n                \"types_url\": \"/v2/types\",\n                \"subscriptions_url\": \"/v2/subscriptions\",\n                \"registrations_url\": \"/v2/registrations\"\n              }\n            }\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"GET\",\n              \"uri\": \"/v2\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"RAW\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              },\n              \"body\": \"{  \\\"entities_url\\\": \\\"/v2/entities\\\",  \\\"types_url\\\": \\\"/v2/types\\\",  \\\"subscriptions_url\\\": \\\"/v2/subscriptions\\\",  \\\"registrations_url\\\": \\\"/v2/registrations\\\"}\"\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"Retrieve API Resources1\",\n            \"x-testDescription\": \"This resource does not have any attributes. Instead it offers the initial\\nAPI affordances in the form of the links in the JSON body.\\nIt is recommended to follow the \\u201curl\\u201d link values,\\n[Link](https://tools.ietf.org/html/rfc5988) or Location headers where\\napplicable to retrieve resources. Instead of constructing your own URLs,\\nto keep your client decoupled from implementation details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/v2/entities\": {\n      \"get\": {\n        \"description\": \"Retrieves a list of entities that match different criteria by id, type, pattern matching (either id or type)\\nand/or those which match a query or geographical query (see [Simple Query Language](#simple_query_language) and \\n[Geographical Queries](#geographical_queries)). A given entity has to match all the criteria to be retrieved\\n(i.e., the criteria is combined in a logical AND way). Note that pattern matching query parameters are incompatible\\n(i.e. mutually exclusive) with their corresponding exact matching parameters, i.e. `idPattern` with `id` and\\n`typePattern` with `type`.\\nThe response payload is an array containing one object per matching entity. Each entity follows\\nthe JSON entity representation format (described in \\\"JSON Entity Representation\\\" section).\\nResponse code:\\n* Successful operation uses 200 OK\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"List Entities\",\n        \"tags\": [\n          \"Entities\"\n        ],\n        \"operationId\": \"List Entities\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"A comma-separated list of elements.\\nRetrieve entities whose ID matches one of the elements in the list.\\nIncompatible with `idPattern`.\"\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"comma-separated list of elements.\\nRetrieve entities whose type matches one of the elements in the list.\\nIncompatible with `typePattern`.\"\n          },\n          {\n            \"name\": \"idPattern\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"A correctly formated regular expression.\\nRetrieve entities whose ID matches the regular expression. Incompatible with `id`.\"\n          },\n          {\n            \"name\": \"typePattern\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"A correctly formated regular expression.\\nRetrieve entities whose type matches the regular expression. Incompatible with `type`.\"\n          },\n          {\n            \"name\": \"q\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"A query expression, composed of a list of statements\\nseparated by `;`, i.e., q=statement1;statement2;statement3.\\nSee [Simple Query Language specification](#simple_query_language).\"\n          },\n          {\n            \"name\": \"mq\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"A query expression for attribute metadata,\\ncomposed of a list of statements separated by `;`, i.e., mq=statement1;statement2;statement3.\\nSee [Simple Query Language specification](#simple_query_language).\"\n          },\n          {\n            \"name\": \"georel\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"Spatial relationship between matching entities and a\\nreference shape. See [Geographical Queries](#geographical_queries).\"\n          },\n          {\n            \"name\": \"geometry\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"Geografical area to which the query is restricted.\\nSee [Geographical Queries](#geographical_queries).\"\n          },\n          {\n            \"name\": \"coords\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"List of latitude-longitude\\npairs of coordinates separated by ';'. See [Geographical Queries](#geographical_queries).\"\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"number\",\n            \"format\": \"double\",\n            \"exclusiveMaximum\": false,\n            \"exclusiveMinimum\": false,\n            \"description\": \"Limits the number of entities to be retrieved\"\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"number\",\n            \"format\": \"double\",\n            \"exclusiveMaximum\": false,\n            \"exclusiveMinimum\": false,\n            \"description\": \"Establishes the offset from where entities are retrieved\"\n          },\n          {\n            \"name\": \"attrs\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"Comma-separated list of attribute names whose data\\nare to be included in the response.\\nThe attributes are retrieved in the order specified by this parameter. If this parameter is\\nnot included, the attributes are retrieved in arbitrary order.\\nSee \\\"Filtering out attributes and metadata\\\" section for more detail.\"\n          },\n          {\n            \"name\": \"metadata\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"A list of metadata names to include in the response.\\nSee \\\"Filtering out attributes and metadata\\\" section for more detail.\"\n          },\n          {\n            \"name\": \"orderBy\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"Criteria for ordering results.\\nSee \\\"Ordering Results\\\" section for details.\"\n          },\n          {\n            \"name\": \"options\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"enum\": [\n              \"count\",\n              \"keyValues\",\n              \"values\",\n              \"unique\"\n            ],\n            \"x-enum-elements\": [\n              {\n                \"name\": \"count\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"keyValues\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"values\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"unique\",\n                \"description\": \"\"\n              }\n            ],\n            \"type\": \"string\",\n            \"description\": \"Options dictionary\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/ListEntitiesResponse\"\n              }\n            },\n            \"examples\": {\n              \"application/json\": [\n                {\n                  \"type\": \"Room\",\n                  \"id\": \"DC_S1-D41\",\n                  \"temperature\": {\n                    \"value\": 35.6,\n                    \"type\": \"Number\",\n                    \"metadata\": {}\n                  }\n                },\n                {\n                  \"type\": \"Room\",\n                  \"id\": \"Boe-Idearium\",\n                  \"temperature\": {\n                    \"value\": 22.5,\n                    \"type\": \"Number\",\n                    \"metadata\": {}\n                  }\n                },\n                {\n                  \"type\": \"Car\",\n                  \"id\": \"P-9873-K\",\n                  \"speed\": {\n                    \"value\": 100,\n                    \"type\": \"number\",\n                    \"metadata\": {\n                      \"accuracy\": {\n                        \"value\": 2,\n                        \"type\": \"Number\"\n                      },\n                      \"timestamp\": {\n                        \"value\": \"2015-06-04T07:20:27.378Z\",\n                        \"type\": \"DateTime\"\n                      }\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"GET\",\n              \"uri\": \"/v2/entities?id=Boe_Idearium&type=Room&idPattern=Bode_.*&typePattern=Room_.*&q=temperature>40&mq=temperature.accuracy<0.9&georel=near&geometry=point&coords=41.390205,2.154007;48.8566,2.3522&limit=20&offset=20&attrs=seatNumber&metadata=accuracy&orderBy=temperature,!speed\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"RAW\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              },\n              \"body\": \"[ {   \\\"type\\\": \\\"Room\\\",   \\\"id\\\": \\\"DC_S1-D41\\\",   \\\"temperature\\\": {     \\\"value\\\": 35.6,     \\\"type\\\": \\\"Number\\\",     \\\"metadata\\\": {}   } }, {   \\\"type\\\": \\\"Room\\\",   \\\"id\\\": \\\"Boe-Idearium\\\",   \\\"temperature\\\": {     \\\"value\\\": 22.5,     \\\"type\\\": \\\"Number\\\",     \\\"metadata\\\": {}   } }, {   \\\"type\\\": \\\"Car\\\",   \\\"id\\\": \\\"P-9873-K\\\",   \\\"speed\\\": {     \\\"value\\\": 100,     \\\"type\\\": \\\"number\\\",     \\\"metadata\\\": {       \\\"accuracy\\\": {         \\\"value\\\": 2,         \\\"type\\\": \\\"Number\\\"       },       \\\"timestamp\\\": {         \\\"value\\\": \\\"2015-06-04T07:20:27.378Z\\\",         \\\"type\\\": \\\"DateTime\\\"       }     }   } }]\"\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"List Entities1\",\n            \"x-testDescription\": \"Retrieves a list of entities that match different criteria by id, type, pattern matching (either id or type)\\nand/or those which match a query or geographical query (see [Simple Query Language](#simple_query_language) and \\n[Geographical Queries](#geographical_queries)). A given entity has to match all the criteria to be retrieved\\n(i.e., the criteria is combined in a logical AND way). Note that pattern matching query parameters are incompatible\\n(i.e. mutually exclusive) with their corresponding exact matching parameters, i.e. `idPattern` with `id` and\\n`typePattern` with `type`.\\nThe response payload is an array containing one object per matching entity. Each entity follows\\nthe JSON entity representation format (described in \\\"JSON Entity Representation\\\" section).\\nResponse code:\\n* Successful operation uses 200 OK\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"post\": {\n        \"description\": \"The payload is an object representing the entity to be created. The object follows\\nthe JSON entity representation format (described in a \\\"JSON Entity Representation\\\" section).\\nResponse:\\n* Successful operation uses 201 Created (if upsert option is not used) or 204 No Content (if\\n  upsert option is used). Response includes a `Location` header with the URL of the\\n  created entity.\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Create Entity\",\n        \"tags\": [\n          \"Entities\"\n        ],\n        \"operationId\": \"Create Entity\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Content-Type\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"\"\n          },\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/CreateEntityRequest\"\n            }\n          },\n          {\n            \"name\": \"options\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"enum\": [\n              \"keyValues\",\n              \"upsert\"\n            ],\n            \"x-enum-elements\": [\n              {\n                \"name\": \"keyValues\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"upsert\",\n                \"description\": \"\"\n              }\n            ],\n            \"type\": \"string\",\n            \"description\": \"Options dictionary\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"\"\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"POST\",\n              \"uri\": \"/v2/entities\",\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              },\n              \"body\": \"{  \\\"type\\\": \\\"Room\\\",  \\\"id\\\": \\\"Bcn-Welt\\\",  \\\"temperature\\\": {    \\\"value\\\": 21.7  },  \\\"humidity\\\": {    \\\"value\\\": 60  },  \\\"location\\\": {    \\\"value\\\": \\\"41.3763726, 2.1864475\\\",    \\\"type\\\": \\\"geo:point\\\",    \\\"metadata\\\": {      \\\"crs\\\": {        \\\"value\\\": \\\"WGS84\\\"      }    }  }}\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"NONE\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {\n                \"Location\": \"/v2/entities/Bcn-Welt?type=Room\"\n              }\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"Create Entity1\",\n            \"x-testDescription\": \"The payload is an object representing the entity to be created. The object follows\\nthe JSON entity representation format (described in a \\\"JSON Entity Representation\\\" section).\\nResponse:\\n* Successful operation uses 201 Created (if upsert option is not used) or 204 No Content (if\\n  upsert option is used). Response includes a `Location` header with the URL of the\\n  created entity.\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/v2/entities/{entityId}\": {\n      \"get\": {\n        \"description\": \"The response is an object representing the entity identified by the ID. The object follows\\nthe JSON entity representation format (described in \\\"JSON Entity Representation\\\" section).\\nThis operation must return one entity element only, but there may be more than one entity with the\\nsame ID (e.g. entities with same ID but different types).\\nIn such case, an error message is returned, with the HTTP status code set to 409 Conflict.\\nResponse:\\n* Successful operation uses 200 OK\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for more details.\",\n        \"summary\": \"Retrieve Entity\",\n        \"tags\": [\n          \"Entities\"\n        ],\n        \"operationId\": \"Retrieve Entity\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"entityId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Id of the entity to be retrieved\"\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"Entity type, to avoid ambiguity in case there are several\\nentities with the same entity id.\"\n          },\n          {\n            \"name\": \"attrs\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"Comma-separated list of attribute names whose\\ndata must be included in the response. The attributes are retrieved in the order specified by\\nthis parameter. See \\\"Filtering out attributes and metadata\\\" section for more detail.\\nIf this parameter is not included, the attributes are retrieved in arbitrary order, and all\\nthe attributes of the entity are included in the response.\"\n          },\n          {\n            \"name\": \"metadata\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"A list of metadata names to include in the response.\\nSee \\\"Filtering out attributes and metadata\\\" section for more detail.\"\n          },\n          {\n            \"name\": \"options\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"enum\": [\n              \"keyValues\",\n              \"values\",\n              \"unique\"\n            ],\n            \"x-enum-elements\": [\n              {\n                \"name\": \"keyValues\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"values\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"unique\",\n                \"description\": \"\"\n              }\n            ],\n            \"type\": \"string\",\n            \"description\": \"Options dictionary\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/RetrieveEntityResponse\"\n            },\n            \"examples\": {\n              \"application/json\": {\n                \"type\": \"Room\",\n                \"id\": \"Bcn_Welt\",\n                \"temperature\": {\n                  \"value\": 21.7,\n                  \"type\": \"Number\"\n                },\n                \"humidity\": {\n                  \"value\": 60,\n                  \"type\": \"Number\"\n                },\n                \"location\": {\n                  \"value\": \"41.3763726, 2.1864475\",\n                  \"type\": \"geo:point\",\n                  \"metadata\": {\n                    \"crs\": {\n                      \"value\": \"WGS84\",\n                      \"type\": \"Text\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"x-unitTests\": [],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"delete\": {\n        \"description\": \"Delete the entity.\\nResponse:\\n* Successful operation uses 204 No Content\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Remove Entity\",\n        \"tags\": [\n          \"Entities\"\n        ],\n        \"operationId\": \"Remove Entity\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"entityId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Id of the entity to be deleted\"\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"Entity type, to avoid ambiguity in case there are several\\nentities with the same entity id.\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"\"\n          }\n        },\n        \"x-unitTests\": [],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/v2/entities/{entityId}/attrs\": {\n      \"get\": {\n        \"description\": \"This request is similar to retreiving the whole entity, however this one omits the `id` and `type`\\nfields.\\nJust like the general request of getting an entire entity, this operation must return only one\\nentity element. If more than one entity with the same ID is found (e.g. entities with\\nsame ID but different type), an error message is returned, with the HTTP status code set to\\n409 Conflict.\\nResponse:\\n* Successful operation uses 200 OK\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Retrieve Entity Attributes\",\n        \"tags\": [\n          \"Entities\"\n        ],\n        \"operationId\": \"Retrieve Entity Attributes\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"entityId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Id of the entity to be retrieved\"\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"Entity type, to avoid ambiguity in case there are several\\nentities with the same entity id.\"\n          },\n          {\n            \"name\": \"attrs\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"Comma-separated list of attribute names whose\\ndata are to be included in the response. The attributes are retrieved in the order specified\\nby this parameter.\\nIf this parameter is not included, the attributes are retrieved in arbitrary order, and all\\nthe attributes of the entity are included in the response.\\nSee \\\"Filtering out attributes and metadata\\\" section for more detail.\"\n          },\n          {\n            \"name\": \"metadata\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"A list of metadata names to include in the response.\\nSee \\\"Filtering out attributes and metadata\\\" section for more detail.\"\n          },\n          {\n            \"name\": \"options\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"enum\": [\n              \"keyValues\",\n              \"values\",\n              \"unique\"\n            ],\n            \"x-enum-elements\": [\n              {\n                \"name\": \"keyValues\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"values\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"unique\",\n                \"description\": \"\"\n              }\n            ],\n            \"type\": \"string\",\n            \"description\": \"Options dictionary\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/RetrieveEntityAttributesResponse\"\n            },\n            \"examples\": {\n              \"application/json\": {\n                \"temperature\": {\n                  \"value\": 21.7,\n                  \"type\": \"Number\"\n                },\n                \"humidity\": {\n                  \"value\": 60,\n                  \"type\": \"Number\"\n                },\n                \"location\": {\n                  \"value\": \"41.3763726, 2.1864475\",\n                  \"type\": \"geo:point\",\n                  \"metadata\": {\n                    \"crs\": {\n                      \"value\": \"WGS84\",\n                      \"type\": \"Text\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"x-unitTests\": [],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"put\": {\n        \"description\": \"The request payload is an object representing the new entity attributes. The object follows\\nthe JSON entity representation format (described in a \\\"JSON Entity Representation\\\" above), except\\nthat `id` and `type` are not allowed.\\nThe attributes previously existing in the entity are removed and replaced by the ones in the\\nrequest.\\nResponse:\\n* Successful operation uses 204 No Content\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Replace all entity attributes\",\n        \"tags\": [\n          \"Entities\"\n        ],\n        \"operationId\": \"Replace all entity attributes\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"entityId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Id of the entity in question.\"\n          },\n          {\n            \"name\": \"Content-Type\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"\"\n          },\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/ReplaceAllEntityAttributesRequest\"\n            }\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"Entity type, to avoid ambiguity in case there are several\\nentities with the same entity id.\"\n          },\n          {\n            \"name\": \"options\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"enum\": [\n              \"keyValues\"\n            ],\n            \"x-enum-elements\": [\n              {\n                \"name\": \"keyValues\",\n                \"description\": \"\"\n              }\n            ],\n            \"type\": \"string\",\n            \"description\": \"Operations options\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"\"\n          }\n        },\n        \"x-unitTests\": [],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"post\": {\n        \"description\": \"The request payload is an object representing the attributes to append or update. The object follows\\nthe JSON entity representation format (described in \\\"JSON Entity Representation\\\" section), except\\nthat `id` and `type` are not allowed.\\nThe entity attributes are updated with the ones in the payload, depending on\\nwhether the `append` operation option is used or not.\\n* If `append` is not used: the entity attributes are updated (if they previously exist) or appended\\n  (if they don't previously exist) with the ones in the payload.\\n* If `append` is used (i.e. strict append semantics): all the attributes in the payload not\\n  previously existing in the entity are appended. In addition to that, in case some of the\\n  attributes in the payload already exist in the entity, an error is returned.\\nResponse:\\n* Successful operation uses 204 No Content\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Update or Append Entity Attributes\",\n        \"tags\": [\n          \"Entities\"\n        ],\n        \"operationId\": \"Update or Append Entity Attributes\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"entityId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Entity id to be updated\"\n          },\n          {\n            \"name\": \"Content-Type\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"\"\n          },\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/UpdateOrAppendEntityAttributesRequest\"\n            }\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"Entity type, to avoid ambiguity in case there are several\\nentities with the same entity id.\"\n          },\n          {\n            \"name\": \"options\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"enum\": [\n              \"append\",\n              \"keyValues\"\n            ],\n            \"x-enum-elements\": [\n              {\n                \"name\": \"append\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"keyValues\",\n                \"description\": \"\"\n              }\n            ],\n            \"type\": \"string\",\n            \"description\": \"Operations options\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"\"\n          }\n        },\n        \"x-unitTests\": [],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"patch\": {\n        \"description\": \"The request payload is an object representing the attributes to update. The object follows\\nthe JSON entity representation format (described in \\\"JSON Entity Representation\\\" section), except\\nthat `id` and `type` are not allowed.\\nThe entity attributes are updated with the ones in the payload. In addition to that, if one or more\\nattributes in the payload doesn't exist in the entity, an error is returned.\\nResponse:\\n* Successful operation uses 204 No Content\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Update Existing Entity Attributes\",\n        \"tags\": [\n          \"Entities\"\n        ],\n        \"operationId\": \"Update Existing Entity Attributes\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"entityId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Id of the entity to be updated\"\n          },\n          {\n            \"name\": \"Content-Type\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"\"\n          },\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/UpdateExistingEntityAttributesRequest\"\n            }\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"Entity type, to avoid ambiguity in case there are several\\nentities with the same entity id.\"\n          },\n          {\n            \"name\": \"options\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"enum\": [\n              \"keyValues\"\n            ],\n            \"x-enum-elements\": [\n              {\n                \"name\": \"keyValues\",\n                \"description\": \"\"\n              }\n            ],\n            \"type\": \"string\",\n            \"description\": \"Operations options\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"\"\n          }\n        },\n        \"x-unitTests\": [],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/v2/entities/{entityId}/attrs/{attrName}\": {\n      \"get\": {\n        \"description\": \"Returns a JSON object with the attribute data of the attribute. The object follows the JSON\\nrepresentation for attributes (described in \\\"JSON Attribute Representation\\\" section).\\nResponse:\\n* Successful operation uses 200 OK.\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Get attribute data\",\n        \"tags\": [\n          \"Attributes\"\n        ],\n        \"operationId\": \"Get attribute data\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"entityId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Id of the entity\"\n          },\n          {\n            \"name\": \"attrName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Name of the attribute to be retrieved.\"\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"Entity type, to avoid ambiguity in case there are several\\nentities with the same entity id.\"\n          },\n          {\n            \"name\": \"metadata\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"A list of metadata names to include in the response.\\nSee \\\"Filtering out attributes and metadata\\\" section for more detail.\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/GetAttributeDataResponse\"\n            },\n            \"examples\": {\n              \"application/json\": {\n                \"value\": 21.7,\n                \"type\": \"Number\",\n                \"metadata\": {}\n              }\n            }\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"GET\",\n              \"uri\": \"/v2/entities/Bcn_Welt/attrs/temperature?metadata=accuracy\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"RAW\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              },\n              \"body\": \"{  \\\"value\\\": 21.7,  \\\"type\\\": \\\"Number\\\",  \\\"metadata\\\": {}}\"\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"Get attribute data1\",\n            \"x-testDescription\": \"Returns a JSON object with the attribute data of the attribute. The object follows the JSON\\nrepresentation for attributes (described in \\\"JSON Attribute Representation\\\" section).\\nResponse:\\n* Successful operation uses 200 OK.\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"put\": {\n        \"description\": \"The request payload is an object representing the new attribute data. Previous attribute data\\nis replaced by the one in the request. The object follows the JSON representation for attributes\\n(described in \\\"JSON Attribute Representation\\\" section).\\nResponse:\\n* Successful operation uses 204 No Content\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Update Attribute Data\",\n        \"tags\": [\n          \"Attributes\"\n        ],\n        \"operationId\": \"Update Attribute Data\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"entityId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Id of the entity to update\"\n          },\n          {\n            \"name\": \"attrName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Attribute name\"\n          },\n          {\n            \"name\": \"Content-Type\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"\"\n          },\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/UpdateAttributeDataRequest\"\n            }\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"Entity type, to avoid ambiguity in case there are several\\nentities with the same entity id.\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"PUT\",\n              \"uri\": \"/v2/entities/Bcn_Welt/attrs/temperature\",\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              },\n              \"body\": \"{  \\\"value\\\": 25.0,  \\\"metadata\\\": {    \\\"unitCode\\\": {      \\\"value\\\": \\\"CEL\\\"    }  }}\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"NONE\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {}\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"Update Attribute Data1\",\n            \"x-testDescription\": \"The request payload is an object representing the new attribute data. Previous attribute data\\nis replaced by the one in the request. The object follows the JSON representation for attributes\\n(described in \\\"JSON Attribute Representation\\\" section).\\nResponse:\\n* Successful operation uses 204 No Content\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"delete\": {\n        \"description\": \"Removes an entity attribute.\\nResponse:\\n* Successful operation uses 204 No Content\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Remove a Single Attribute\",\n        \"tags\": [\n          \"Attributes\"\n        ],\n        \"operationId\": \"Remove a Single Attribute\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"entityId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Id of the entity.\"\n          },\n          {\n            \"name\": \"attrName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Attribute name.\"\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"Entity type, to avoid ambiguity in case there are several\\nentities with the same entity id.\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"\"\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"DELETE\",\n              \"uri\": \"/v2/entities/Bcn_Welt/attrs/temperature\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"NONE\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {}\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"Remove a Single Attribute1\",\n            \"x-testDescription\": \"Removes an entity attribute.\\nResponse:\\n* Successful operation uses 204 No Content\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/v2/entities/{entityId}/attrs/{attrName}/value\": {\n      \"get\": {\n        \"description\": \"This operation returns the `value` property with the value of the attribute.\\n* If attribute value is JSON Array or Object:\\n  * If `Accept` header can be expanded to `application/json` or `text/plain` return the value as a JSON with a\\n    response type of application/json or text/plain (whichever is the first in `Accept` header or\\n    `application/json` in case of `Accept: */*`).\\n  * Else return a HTTP error \\\"406 Not Acceptable: accepted MIME types: application/json, text/plain\\\"\\n* If attribute value is a string, number, null or boolean:\\n  * If `Accept` header can be expanded to text/plain return the value as text. In case of a string, citation\\n    marks are used at the begining and end.\\n  * Else return a HTTP error \\\"406 Not Acceptable: accepted MIME types: text/plain\\\"\\nResponse:\\n* Successful operation uses 200 OK.\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Get Attribute Value\",\n        \"tags\": [\n          \"Attribute Value\"\n        ],\n        \"operationId\": \"Get Attribute Value\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"entityId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Id of the entity in question\"\n          },\n          {\n            \"name\": \"attrName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Name of the attribute to be retrieved.\"\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"Entity type, to avoid ambiguity in case there are several\\nentities with the same entity id.\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/GetAttributeValueResponse\"\n            },\n            \"examples\": {\n              \"application/json\": {\n                \"address\": \"Ronda de la Comunicacion s/n\",\n                \"zipCode\": 28050,\n                \"city\": \"Madrid\",\n                \"country\": \"Spain\"\n              }\n            }\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"GET\",\n              \"uri\": \"/v2/entities/Bcn_Welt/attrs/address/value\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"RAW\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              },\n              \"body\": \"{  \\\"address\\\": \\\"Ronda de la Comunicacion s/n\\\",  \\\"zipCode\\\": 28050,  \\\"city\\\": \\\"Madrid\\\",  \\\"country\\\": \\\"Spain\\\"}\"\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"Get Attribute Value1\",\n            \"x-testDescription\": \"This operation returns the `value` property with the value of the attribute.\\n* If attribute value is JSON Array or Object:\\n  * If `Accept` header can be expanded to `application/json` or `text/plain` return the value as a JSON with a\\n    response type of application/json or text/plain (whichever is the first in `Accept` header or\\n    `application/json` in case of `Accept: */*`).\\n  * Else return a HTTP error \\\"406 Not Acceptable: accepted MIME types: application/json, text/plain\\\"\\n* If attribute value is a string, number, null or boolean:\\n  * If `Accept` header can be expanded to text/plain return the value as text. In case of a string, citation\\n    marks are used at the begining and end.\\n  * Else return a HTTP error \\\"406 Not Acceptable: accepted MIME types: text/plain\\\"\\nResponse:\\n* Successful operation uses 200 OK.\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"put\": {\n        \"description\": \"The request payload is the new attribute value.\\n* If the request payload MIME type is `application/json`, then the value of the attribute is set to\\n  the JSON object or array coded in the payload (if the payload is not a valid JSON document,\\n  then an error is returned).\\n* If the request payload MIME type is `text/plain`, then the following algorithm is applied to the\\n  payload:\\n  * If the payload starts and ends with citation-marks (`\\\"`), the value is taken as a string\\n    (the citation marks themselves are not considered part of the string)\\n  * If `true` or `false`, the value is taken as a boolean.\\n  * If `null`, the value is taken as null.\\n  * If these first three tests 'fail', the text is interpreted as a number.\\n  * If not a valid number, then an error is returned and the attribute's value is unchanged.\\nThe payload MIME type in the request is specified in the `Content-Type` HTTP header.\\nResponse:\\n* Successful operation uses 204 No Content\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Update Attribute Value\",\n        \"tags\": [\n          \"Attribute Value\"\n        ],\n        \"operationId\": \"Update Attribute Value\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"entityId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Id of the entity to be updated.\"\n          },\n          {\n            \"name\": \"attrName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Attribute name.\"\n          },\n          {\n            \"name\": \"Content-Type\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"\"\n          },\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/UpdateAttributeValueRequest\"\n            }\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"Entity type, to avoid ambiguity in case there are several\\nentities with the same entity id.\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"PUT\",\n              \"uri\": \"/v2/entities/Bcn_Welt/attrs/address/value\",\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              },\n              \"body\": \"{  \\\"address\\\": \\\"Ronda de la Comunicacion s/n\\\",  \\\"zipCode\\\": 28050,  \\\"city\\\": \\\"Madrid\\\",  \\\"country\\\": \\\"Spain\\\"}\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"NONE\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {}\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"Update Attribute Value1\",\n            \"x-testDescription\": \"The request payload is the new attribute value.\\n* If the request payload MIME type is `application/json`, then the value of the attribute is set to\\n  the JSON object or array coded in the payload (if the payload is not a valid JSON document,\\n  then an error is returned).\\n* If the request payload MIME type is `text/plain`, then the following algorithm is applied to the\\n  payload:\\n  * If the payload starts and ends with citation-marks (`\\\"`), the value is taken as a string\\n    (the citation marks themselves are not considered part of the string)\\n  * If `true` or `false`, the value is taken as a boolean.\\n  * If `null`, the value is taken as null.\\n  * If these first three tests 'fail', the text is interpreted as a number.\\n  * If not a valid number, then an error is returned and the attribute's value is unchanged.\\nThe payload MIME type in the request is specified in the `Content-Type` HTTP header.\\nResponse:\\n* Successful operation uses 204 No Content\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/v2/types/\": {\n      \"get\": {\n        \"description\": \"If the `values` option is not in use, this operation returns a JSON array with the entity types.\\nEach element is a JSON object with information about the type:\\n* `type` : the entity type name.\\n* `attrs` : the set of attribute names along with all the entities of such type, represented in\\n  a JSON object whose keys are the attribute names and whose values contain information of such\\n  attributes (in particular a list of the types used by attributes with that name along with all the\\n  entities).\\n* `count` : the number of entities belonging to that type.\\nIf the `values` option is used, the operation returns a JSON array with a list of entity type\\nnames as strings.\\nResults are ordered by entity `type` in alphabetical order.\\nResponse code:\\n* Successful operation uses 200 OK\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"List Entity Types\",\n        \"tags\": [\n          \"Types\"\n        ],\n        \"operationId\": \"List Entity Types\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"number\",\n            \"format\": \"double\",\n            \"exclusiveMaximum\": false,\n            \"exclusiveMinimum\": false,\n            \"description\": \"Limit the number of types to be retrieved.\"\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"number\",\n            \"format\": \"double\",\n            \"exclusiveMaximum\": false,\n            \"exclusiveMinimum\": false,\n            \"description\": \"Skip a number of records.\"\n          },\n          {\n            \"name\": \"options\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"enum\": [\n              \"count\",\n              \"values\"\n            ],\n            \"x-enum-elements\": [\n              {\n                \"name\": \"count\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"values\",\n                \"description\": \"\"\n              }\n            ],\n            \"type\": \"string\",\n            \"description\": \"Options dictionary.\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/ListEntityTypesResponse\"\n              }\n            },\n            \"examples\": {\n              \"application/json\": [\n                {\n                  \"type\": \"Car\",\n                  \"attrs\": {\n                    \"speed\": {\n                      \"types\": [\n                        \"Number\"\n                      ]\n                    },\n                    \"fuel\": {\n                      \"types\": [\n                        \"gasoline\",\n                        \"diesel\"\n                      ]\n                    },\n                    \"temperature\": {\n                      \"types\": [\n                        \"urn:phenomenum:temperature\"\n                      ]\n                    }\n                  },\n                  \"count\": 12\n                },\n                {\n                  \"type\": \"Room\",\n                  \"attrs\": {\n                    \"pressure\": {\n                      \"types\": [\n                        \"Number\"\n                      ]\n                    },\n                    \"humidity\": {\n                      \"types\": [\n                        \"percentage\"\n                      ]\n                    },\n                    \"temperature\": {\n                      \"types\": [\n                        \"urn:phenomenum:temperature\"\n                      ]\n                    }\n                  },\n                  \"count\": 7\n                }\n              ]\n            }\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"GET\",\n              \"uri\": \"/v2/types/?limit=10&offset=20\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"RAW\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              },\n              \"body\": \"[  {    \\\"type\\\": \\\"Car\\\",    \\\"attrs\\\": {      \\\"speed\\\": {        \\\"types\\\": [ \\\"Number\\\" ]      },      \\\"fuel\\\": {        \\\"types\\\": [ \\\"gasoline\\\", \\\"diesel\\\" ]      },      \\\"temperature\\\": {        \\\"types\\\": [ \\\"urn:phenomenum:temperature\\\" ]      }    },    \\\"count\\\": 12  },  {    \\\"type\\\": \\\"Room\\\",    \\\"attrs\\\": {      \\\"pressure\\\": {        \\\"types\\\": [ \\\"Number\\\" ]      },      \\\"humidity\\\": {        \\\"types\\\": [ \\\"percentage\\\" ]      },      \\\"temperature\\\": {        \\\"types\\\": [ \\\"urn:phenomenum:temperature\\\" ]      }    },    \\\"count\\\": 7  }]\"\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"List Entity Types1\",\n            \"x-testDescription\": \"If the `values` option is not in use, this operation returns a JSON array with the entity types.\\nEach element is a JSON object with information about the type:\\n* `type` : the entity type name.\\n* `attrs` : the set of attribute names along with all the entities of such type, represented in\\n  a JSON object whose keys are the attribute names and whose values contain information of such\\n  attributes (in particular a list of the types used by attributes with that name along with all the\\n  entities).\\n* `count` : the number of entities belonging to that type.\\nIf the `values` option is used, the operation returns a JSON array with a list of entity type\\nnames as strings.\\nResults are ordered by entity `type` in alphabetical order.\\nResponse code:\\n* Successful operation uses 200 OK\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/v2/types/{entityType}\": {\n      \"get\": {\n        \"description\": \"This operation returns a JSON object with information about the type:\\n* `attrs` : the set of attribute names along with all the entities of such type, represented in\\n  a JSON object whose keys are the attribute names and whose values contain information of such\\n  attributes (in particular a list of the types used by attributes with that name along with all the\\n  entities).\\n* `count` : the number of entities belonging to that type.\\nResponse code:\\n* Successful operation uses 200 OK\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Retrieve entity type\",\n        \"tags\": [\n          \"Types\"\n        ],\n        \"operationId\": \"Retrieve entity type\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"entityType\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Entity Type\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/RetrieveEntityTypeResponse\"\n            },\n            \"examples\": {\n              \"application/json\": {\n                \"attrs\": {\n                  \"pressure\": {\n                    \"types\": [\n                      \"Number\"\n                    ]\n                  },\n                  \"humidity\": {\n                    \"types\": [\n                      \"percentage\"\n                    ]\n                  },\n                  \"temperature\": {\n                    \"types\": [\n                      \"urn:phenomenum:temperature\"\n                    ]\n                  }\n                },\n                \"count\": 7\n              }\n            }\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"GET\",\n              \"uri\": \"/v2/types/Room\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"RAW\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              },\n              \"body\": \"  {    \\\"attrs\\\": {      \\\"pressure\\\": {        \\\"types\\\": [ \\\"Number\\\" ]      },      \\\"humidity\\\": {        \\\"types\\\": [ \\\"percentage\\\" ]      },      \\\"temperature\\\": {        \\\"types\\\": [ \\\"urn:phenomenum:temperature\\\" ]      }    },    \\\"count\\\": 7  }\"\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"Retrieve entity type1\",\n            \"x-testDescription\": \"This operation returns a JSON object with information about the type:\\n* `attrs` : the set of attribute names along with all the entities of such type, represented in\\n  a JSON object whose keys are the attribute names and whose values contain information of such\\n  attributes (in particular a list of the types used by attributes with that name along with all the\\n  entities).\\n* `count` : the number of entities belonging to that type.\\nResponse code:\\n* Successful operation uses 200 OK\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/v2/subscriptions\": {\n      \"get\": {\n        \"description\": \"Returns a list of all the subscriptions present in the system.\\nResponse:\\n* Successful operation uses 200 OK\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"List Subscriptions\",\n        \"tags\": [\n          \"Subscriptions\"\n        ],\n        \"operationId\": \"List Subscriptions\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"number\",\n            \"format\": \"double\",\n            \"exclusiveMaximum\": false,\n            \"exclusiveMinimum\": false,\n            \"description\": \"Limit the number of subscriptions to be retrieved\"\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"number\",\n            \"format\": \"double\",\n            \"exclusiveMaximum\": false,\n            \"exclusiveMinimum\": false,\n            \"description\": \"Skip a number of subscriptions\"\n          },\n          {\n            \"name\": \"options\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"enum\": [\n              \"count\"\n            ],\n            \"x-enum-elements\": [\n              {\n                \"name\": \"count\",\n                \"description\": \"\"\n              }\n            ],\n            \"type\": \"string\",\n            \"description\": \"Options dictionary\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/ListSubscriptionsResponse\"\n              }\n            },\n            \"examples\": {\n              \"application/json\": [\n                {\n                  \"id\": \"abcdefg\",\n                  \"description\": \"One subscription to rule them all\",\n                  \"subject\": {\n                    \"entities\": [\n                      {\n                        \"id\": \"Bcn_Welt\",\n                        \"type\": \"Room\"\n                      }\n                    ],\n                    \"condition\": {\n                      \"attrs\": [\n                        \"temperature \"\n                      ],\n                      \"expression\": {\n                        \"q\": \"temperature>40\"\n                      }\n                    }\n                  },\n                  \"notification\": {\n                    \"httpCustom\": {\n                      \"url\": \"http://localhost:1234\",\n                      \"headers\": {\n                        \"X-MyHeader\": \"foo\"\n                      },\n                      \"qs\": {\n                        \"authToken\": \"bar\"\n                      }\n                    },\n                    \"attrsFormat\": \"keyValues\",\n                    \"attrs\": [\n                      \"temperature\",\n                      \"humidity\"\n                    ],\n                    \"timesSent\": 12,\n                    \"lastNotification\": \"2015-10-05T16:00:00Z\",\n                    \"lastFailure\": \"2015-10-06T16:00:00Z\"\n                  },\n                  \"expires\": \"2016-04-05T14:00:00Z\",\n                  \"status\": \"failed\",\n                  \"throttling\": 5\n                }\n              ]\n            }\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"GET\",\n              \"uri\": \"/v2/subscriptions?limit=10&offset=20\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"RAW\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {},\n              \"body\": \"[  {    \\\"id\\\": \\\"abcdefg\\\",    \\\"description\\\": \\\"One subscription to rule them all\\\",    \\\"subject\\\": {                          \\\"entities\\\": [        {          \\\"id\\\": \\\"Bcn_Welt\\\",          \\\"type\\\": \\\"Room\\\"        }      ],      \\\"condition\\\": {         \\\"attrs\\\": [ \\\"temperature \\\" ],         \\\"expression\\\": {            \\\"q\\\": \\\"temperature>40\\\"         }      }    },    \\\"notification\\\": {      \\\"httpCustom\\\": {        \\\"url\\\": \\\"http://localhost:1234\\\",        \\\"headers\\\": {          \\\"X-MyHeader\\\": \\\"foo\\\"        },        \\\"qs\\\": {          \\\"authToken\\\": \\\"bar\\\"        }      },      \\\"attrsFormat\\\": \\\"keyValues\\\",      \\\"attrs\\\": [\\\"temperature\\\", \\\"humidity\\\"],      \\\"timesSent\\\": 12,      \\\"lastNotification\\\": \\\"2015-10-05T16:00:00.00Z\\\",      \\\"lastFailure\\\": \\\"2015-10-06T16:00:00.00Z\\\"    },    \\\"expires\\\": \\\"2016-04-05T14:00:00.00Z\\\",    \\\"status\\\": \\\"failed\\\",    \\\"throttling\\\": 5  }]\"\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"List Subscriptions1\",\n            \"x-testDescription\": \"Returns a list of all the subscriptions present in the system.\\nResponse:\\n* Successful operation uses 200 OK\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"post\": {\n        \"description\": \"Creates a new subscription.\\nThe subscription is represented by a JSON object as described at the beginning of this section.\\nResponse:\\n* Successful operation uses 201 Created\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Create Subscription\",\n        \"tags\": [\n          \"Subscriptions\"\n        ],\n        \"operationId\": \"Create Subscription\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Content-Type\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"\"\n          },\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/CreateSubscriptionRequest\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\"\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"POST\",\n              \"uri\": \"/v2/subscriptions\",\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              },\n              \"body\": \"{  \\\"description\\\": \\\"One subscription to rule them all\\\",  \\\"subject\\\": {    \\\"entities\\\": [      {        \\\"idPattern\\\": \\\".*\\\",        \\\"type\\\": \\\"Room\\\"      }    ],    \\\"condition\\\": {      \\\"attrs\\\": [ \\\"temperature\\\" ],      \\\"expression\\\": {        \\\"q\\\": \\\"temperature>40\\\"      }    }  },  \\\"notification\\\": {    \\\"http\\\": {      \\\"url\\\": \\\"http://localhost:1234\\\"    },    \\\"attrs\\\": [\\\"temperature\\\", \\\"humidity\\\"]  },              \\\"expires\\\": \\\"2016-04-05T14:00:00.00Z\\\",  \\\"throttling\\\": 5}\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"NONE\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {\n                \"Location\": \"/v2/subscriptions/abcde98765\"\n              }\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"Create Subscription1\",\n            \"x-testDescription\": \"Creates a new subscription.\\nThe subscription is represented by a JSON object as described at the beginning of this section.\\nResponse:\\n* Successful operation uses 201 Created\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/v2/subscriptions/{subscriptionId}\": {\n      \"get\": {\n        \"description\": \"The response is the subscription represented by a JSON object as described at the beginning of this\\nsection.\\nResponse:\\n* Successful operation uses 200 OK\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Retrieve Subscription\",\n        \"tags\": [\n          \"Subscriptions\"\n        ],\n        \"operationId\": \"Retrieve Subscription\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"subscriptionId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"subscription Id.\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"x-unitTests\": [],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"delete\": {\n        \"description\": \"Cancels subscription.\\nResponse:\\n* Successful operation uses 204 No Content\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Delete subscription\",\n        \"tags\": [\n          \"Subscriptions\"\n        ],\n        \"operationId\": \"Delete subscription\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"subscriptionId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"subscription Id.\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"\"\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"DELETE\",\n              \"uri\": \"/v2/subscriptions/abcdef\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"NONE\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {}\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"Delete subscription1\",\n            \"x-testDescription\": \"Cancels subscription.\\nResponse:\\n* Successful operation uses 204 No Content\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"patch\": {\n        \"description\": \"Only the fields included in the request are updated in the subscription.\\nResponse:\\n* Successful operation uses 204 No Content\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Update Subscription\",\n        \"tags\": [\n          \"Subscriptions\"\n        ],\n        \"operationId\": \"Update Subscription\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"subscriptionId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"subscription Id.\"\n          },\n          {\n            \"name\": \"Content-Type\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"\"\n          },\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/UpdateSubscriptionRequest\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"\"\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"PATCH\",\n              \"uri\": \"/v2/subscriptions/abcdef\",\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              },\n              \"body\": \"{  \\\"expires\\\": \\\"2016-04-05T14:00:00.00Z\\\"}\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"NONE\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {}\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"Update Subscription1\",\n            \"x-testDescription\": \"Only the fields included in the request are updated in the subscription.\\nResponse:\\n* Successful operation uses 204 No Content\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/v2/registrations\": {\n      \"get\": {\n        \"description\": \"Lists all the context provider registrations present in the system.\",\n        \"summary\": \"List Registrations\",\n        \"tags\": [\n          \"Registrations\"\n        ],\n        \"operationId\": \"List Registrations\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"number\",\n            \"format\": \"double\",\n            \"exclusiveMaximum\": false,\n            \"exclusiveMinimum\": false,\n            \"description\": \"Limit the number of registrations to be retrieved\"\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"number\",\n            \"format\": \"double\",\n            \"exclusiveMaximum\": false,\n            \"exclusiveMinimum\": false,\n            \"description\": \"Skip a number of registrations\"\n          },\n          {\n            \"name\": \"options\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"enum\": [\n              \"count\"\n            ],\n            \"x-enum-elements\": [\n              {\n                \"name\": \"count\",\n                \"description\": \"\"\n              }\n            ],\n            \"type\": \"string\",\n            \"description\": \"Options dictionary\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/ListRegistrationsResponse\"\n              }\n            },\n            \"examples\": {\n              \"application/json\": [\n                {\n                  \"id\": \"abcdefg\",\n                  \"description\": \"Example Context Source\",\n                  \"dataProvided\": {\n                    \"entities\": [\n                      {\n                        \"id\": \"Bcn_Welt\",\n                        \"type\": \"Room\"\n                      }\n                    ],\n                    \"attrs\": [\n                      \"temperature\"\n                    ]\n                  },\n                  \"provider\": {\n                    \"http\": {\n                      \"url\": \"http://contextsource.example.org\"\n                    },\n                    \"supportedForwardingMode\": \"all\"\n                  },\n                  \"expires\": \"2017-10-31T12:00:00\",\n                  \"status\": \"active\",\n                  \"forwardingInformation\": {\n                    \"timesSent\": 12,\n                    \"lastForwarding\": \"2017-10-06T16:00:00Z\",\n                    \"lastSuccess\": \"2017-10-06T16:00:00Z\",\n                    \"lastFailure\": \"2017-10-05T16:00:00Z\"\n                  }\n                }\n              ]\n            }\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"GET\",\n              \"uri\": \"/v2/registrations?limit=10&offset=20\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"RAW\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {},\n              \"body\": \"[  {    \\\"id\\\": \\\"abcdefg\\\",    \\\"description\\\": \\\"Example Context Source\\\",    \\\"dataProvided\\\": {      \\\"entities\\\": [        {          \\\"id\\\": \\\"Bcn_Welt\\\",          \\\"type\\\": \\\"Room\\\"        }      ],      \\\"attrs\\\": [        \\\"temperature\\\"      ]    },    \\\"provider\\\": {      \\\"http\\\": {        \\\"url\\\": \\\"http://contextsource.example.org\\\"      },      \\\"supportedForwardingMode\\\": \\\"all\\\"    },    \\\"expires\\\": \\\"2017-10-31T12:00:00\\\",    \\\"status\\\": \\\"active\\\",    \\\"forwardingInformation\\\": {      \\\"timesSent\\\": 12,      \\\"lastForwarding\\\": \\\"2017-10-06T16:00:00.00Z\\\",      \\\"lastSuccess\\\": \\\"2017-10-06T16:00:00.00Z\\\",      \\\"lastFailure\\\": \\\"2017-10-05T16:00:00.00Z\\\"    }  }]\"\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"List Registrations1\",\n            \"x-testDescription\": \"Lists all the context provider registrations present in the system.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"post\": {\n        \"description\": \"Creates a new context provider registration. This is typically used for binding context sources\\nas providers of certain data.\\nThe registration is represented by a JSON object as described at the beginning of this section.\\nResponse:\\n* Successful operation uses 201 Created\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Create Registration\",\n        \"tags\": [\n          \"Registrations\"\n        ],\n        \"operationId\": \"Create Registration\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Content-Type\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"\"\n          },\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/CreateRegistrationRequest\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\"\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"POST\",\n              \"uri\": \"/v2/registrations\",\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              },\n              \"body\": \"{  \\\"description\\\": \\\"Relative Humidity Context Source\\\",  \\\"dataProvided\\\": {    \\\"entities\\\": [      {        \\\"id\\\": \\\"room2\\\",        \\\"type\\\": \\\"Room\\\"      }    ],    \\\"attrs\\\": [      \\\"relativeHumidity\\\"    ]  },  \\\"provider\\\": {    \\\"http\\\":{       \\\"url\\\": \\\"http://localhost:1234\\\"    }  }}\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"NONE\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {\n                \"Location\": \"/v2/registrations/abcde98765\"\n              }\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"Create Registration1\",\n            \"x-testDescription\": \"Creates a new context provider registration. This is typically used for binding context sources\\nas providers of certain data.\\nThe registration is represented by a JSON object as described at the beginning of this section.\\nResponse:\\n* Successful operation uses 201 Created\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/v2/registrations/{registrationId}\": {\n      \"get\": {\n        \"description\": \"The response is the registration represented by a JSON object as described at the beginning of this\\nsection.\\nResponse:\\n* Successful operation uses 200 OK\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Retrieve Registration\",\n        \"tags\": [\n          \"Registrations\"\n        ],\n        \"operationId\": \"Retrieve Registration\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"registrationId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"registration Id.\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/RetrieveRegistrationResponse\"\n            },\n            \"examples\": {\n              \"application/json\": {\n                \"id\": \"abcdefg\",\n                \"description\": \"Example Context Source\",\n                \"dataProvided\": {\n                  \"entities\": [\n                    {\n                      \"id\": \"Bcn_Welt\",\n                      \"type\": \"Room\"\n                    }\n                  ],\n                  \"attrs\": [\n                    \"temperature\"\n                  ]\n                },\n                \"provider\": {\n                  \"http\": {\n                    \"url\": \"http://contextsource.example.org\"\n                  },\n                  \"supportedForwardingMode\": \"all\"\n                },\n                \"expires\": \"2017-10-31T12:00:00\",\n                \"status\": \"failed\",\n                \"forwardingInformation\": {\n                  \"timesSent\": 12,\n                  \"lastForwarding\": \"2017-10-06T16:00:00Z\",\n                  \"lastFailure\": \"2017-10-06T16:00:00Z\",\n                  \"lastSuccess\": \"2017-10-05T18:25:00Z\"\n                }\n              }\n            }\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"GET\",\n              \"uri\": \"/v2/registrations/abcdef\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"RAW\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              },\n              \"body\": \"  {        \\\"id\\\": \\\"abcdefg\\\",        \\\"description\\\": \\\"Example Context Source\\\",        \\\"dataProvided\\\": {          \\\"entities\\\": [            {              \\\"id\\\": \\\"Bcn_Welt\\\",              \\\"type\\\": \\\"Room\\\"            }          ],          \\\"attrs\\\": [            \\\"temperature\\\"          ]        },        \\\"provider\\\": {          \\\"http\\\": {            \\\"url\\\": \\\"http://contextsource.example.org\\\"          },          \\\"supportedForwardingMode\\\": \\\"all\\\"        },        \\\"expires\\\": \\\"2017-10-31T12:00:00\\\",        \\\"status\\\": \\\"failed\\\",        \\\"forwardingInformation\\\": {          \\\"timesSent\\\": 12,          \\\"lastForwarding\\\": \\\"2017-10-06T16:00:00.00Z\\\",          \\\"lastFailure\\\": \\\"2017-10-06T16:00:00.00Z\\\",          \\\"lastSuccess\\\": \\\"2017-10-05T18:25:00.00Z\\\",        }  }      \"\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"Retrieve Registration1\",\n            \"x-testDescription\": \"The response is the registration represented by a JSON object as described at the beginning of this\\nsection.\\nResponse:\\n* Successful operation uses 200 OK\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"delete\": {\n        \"description\": \"Cancels a context provider registration.\\nResponse:\\n* Successful operation uses 204 No Content\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Delete Registration\",\n        \"tags\": [\n          \"Registrations\"\n        ],\n        \"operationId\": \"Delete Registration\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"registrationId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"registration Id.\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"\"\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"DELETE\",\n              \"uri\": \"/v2/registrations/abcdef\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"NONE\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {}\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"Delete Registration1\",\n            \"x-testDescription\": \"Cancels a context provider registration.\\nResponse:\\n* Successful operation uses 204 No Content\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"patch\": {\n        \"description\": \"Only the fields included in the request are updated in the registration.\\nResponse:\\n* Successful operation uses 204 No Content\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Update Registration\",\n        \"tags\": [\n          \"Registrations\"\n        ],\n        \"operationId\": \"Update Registration\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"registrationId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"registration Id.\"\n          },\n          {\n            \"name\": \"Content-Type\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"\"\n          },\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/UpdateRegistrationRequest\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"\"\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"PATCH\",\n              \"uri\": \"/v2/registrations/abcdef\",\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              },\n              \"body\": \"{    \\\"expires\\\": \\\"2017-10-04T00:00:00\\\"}\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"NONE\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {}\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"Update Registration1\",\n            \"x-testDescription\": \"Only the fields included in the request are updated in the registration.\\nResponse:\\n* Successful operation uses 204 No Content\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/v2/op/update\": {\n      \"post\": {\n        \"description\": \"This operation allows to create, update and/or delete several entities in a single batch operation.\\nThe payload is an object with two properties:\\n+ `actionType`, to specify the kind of update action to do: either `append`, `appendStrict`, `update`,\\n  `delete`, or `replace`.\\n+ `entities`, an array of entities, each entity specified using the JSON entity representation format\\n  (described in the section \\\"JSON Entity Representation\\\").\\nThis operation is split in as many individual operations as entities in the `entities` vector, so\\nthe `actionType` is executed for each one of them. Depending on the `actionType`, a mapping with\\nregular non-batch operations can be done:\\n* `append`: maps to `POST /v2/entities` (if the entity does not already exist) or `POST /v2/entities/<id>/attrs`\\n  (if the entity already exists).\\n* `appendStrict`: maps to `POST /v2/entities` (if the entity does not already exist) or\\n  `POST /v2/entities/<id>/attrs?options=append` (if the entity already exists).\\n* `update`: maps to `PATCH /v2/entities/<id>/attrs`.\\n* `delete`: maps to `DELETE /v2/entities/<id>/attrs/<attrName>` on every attribute included in the entity or\\n  to `DELETE /v2/entities/<id>` if no attribute were included in the entity.\\n* `replace`: maps to `PUT /v2/entities/<id>/attrs`.\\nResponse:\\n* Successful operation uses 204 No Content.\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Update\",\n        \"tags\": [\n          \"Batch Operations\"\n        ],\n        \"operationId\": \"Update\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Content-Type\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"\"\n          },\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/UpdateRequest\"\n            }\n          },\n          {\n            \"name\": \"options\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"enum\": [\n              \"keyValues\"\n            ],\n            \"x-enum-elements\": [\n              {\n                \"name\": \"keyValues\",\n                \"description\": \"\"\n              }\n            ],\n            \"type\": \"string\",\n            \"description\": \"Options dictionary\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"\"\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"POST\",\n              \"uri\": \"/v2/op/update\",\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              },\n              \"body\": \"{  \\\"actionType\\\": \\\"append\\\",  \\\"entities\\\": [    {      \\\"type\\\": \\\"Room\\\",      \\\"id\\\": \\\"Bcn-Welt\\\",      \\\"temperature\\\": {        \\\"value\\\": 21.7       },      \\\"humidity\\\": {        \\\"value\\\": 60      }    },    {      \\\"type\\\": \\\"Room\\\",      \\\"id\\\": \\\"Mad_Aud\\\",      \\\"temperature\\\": {        \\\"value\\\": 22.9      },      \\\"humidity\\\": {        \\\"value\\\": 85      }    }  ]}\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"NONE\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {}\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"Update1\",\n            \"x-testDescription\": \"This operation allows to create, update and/or delete several entities in a single batch operation.\\nThe payload is an object with two properties:\\n+ `actionType`, to specify the kind of update action to do: either `append`, `appendStrict`, `update`,\\n  `delete`, or `replace`.\\n+ `entities`, an array of entities, each entity specified using the JSON entity representation format\\n  (described in the section \\\"JSON Entity Representation\\\").\\nThis operation is split in as many individual operations as entities in the `entities` vector, so\\nthe `actionType` is executed for each one of them. Depending on the `actionType`, a mapping with\\nregular non-batch operations can be done:\\n* `append`: maps to `POST /v2/entities` (if the entity does not already exist) or `POST /v2/entities/<id>/attrs`\\n  (if the entity already exists).\\n* `appendStrict`: maps to `POST /v2/entities` (if the entity does not already exist) or\\n  `POST /v2/entities/<id>/attrs?options=append` (if the entity already exists).\\n* `update`: maps to `PATCH /v2/entities/<id>/attrs`.\\n* `delete`: maps to `DELETE /v2/entities/<id>/attrs/<attrName>` on every attribute included in the entity or\\n  to `DELETE /v2/entities/<id>` if no attribute were included in the entity.\\n* `replace`: maps to `PUT /v2/entities/<id>/attrs`.\\nResponse:\\n* Successful operation uses 204 No Content.\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/v2/op/query\": {\n      \"post\": {\n        \"description\": \"The response payload is an Array containing one object per matching entity, or an empty array `[]` if \\nno entities are found. The entities follow the JSON entity representation format\\n(described in the section \\\"JSON Entity Representation\\\").\\nThe payload may contain the following elements (all of them optional):\\n+ `entities`: a list of entites to search for. Each element is represented by a JSON object with the\\n  following elements:\\n    + `id` or `idPattern`: Id or pattern of the affected entities. Both cannot be used at the same\\n      time, but one of them must be present.\\n    + `type` or `typePattern`: Type or type pattern of the entities to search for. Both cannot be used at\\n      the same time. If omitted, it means \\\"any entity type\\\".\\n+ `attrs`: List of attributes to be provided (if not specified, all attributes).\\n+ `expression`: an expression composed of `q`, `mq`, `georel`, `geometry` and `coords` (see \\\"List\\n   entities\\\" operation above about this field).\\n+ `metadata`: a list of metadata names to include in the response.\\n   See \\\"Filtering out attributes and metadata\\\" section for more detail.\\nResponse code:\\n* Successful operation uses 200 OK\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Query\",\n        \"tags\": [\n          \"Batch Operations\"\n        ],\n        \"operationId\": \"Query\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Content-Type\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"\"\n          },\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/QueryRequest\"\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"number\",\n            \"format\": \"double\",\n            \"exclusiveMaximum\": false,\n            \"exclusiveMinimum\": false,\n            \"description\": \"Limit the number of entities to be retrieved.\"\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"number\",\n            \"format\": \"double\",\n            \"exclusiveMaximum\": false,\n            \"exclusiveMinimum\": false,\n            \"description\": \"Skip a number of records.\"\n          },\n          {\n            \"name\": \"orderBy\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"Criteria for ordering results.\\nSee \\\"Ordering Results\\\" section for details.\"\n          },\n          {\n            \"name\": \"options\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"enum\": [\n              \"count\",\n              \"keyValues\",\n              \"values\",\n              \"unique\"\n            ],\n            \"x-enum-elements\": [\n              {\n                \"name\": \"count\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"keyValues\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"values\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"unique\",\n                \"description\": \"\"\n              }\n            ],\n            \"type\": \"string\",\n            \"description\": \"Options dictionary\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/QueryResponse\"\n              }\n            },\n            \"examples\": {\n              \"application/json\": [\n                {\n                  \"type\": \"Room\",\n                  \"id\": \"DC_S1-D41\",\n                  \"temperature\": {\n                    \"value\": 35.6,\n                    \"type\": \"Number\"\n                  }\n                },\n                {\n                  \"type\": \"Room\",\n                  \"id\": \"Boe-Idearium\",\n                  \"temperature\": {\n                    \"value\": 22.5,\n                    \"type\": \"Number\"\n                  }\n                },\n                {\n                  \"type\": \"Car\",\n                  \"id\": \"P-9873-K\",\n                  \"temperature\": {\n                    \"value\": 40,\n                    \"type\": \"Number\",\n                    \"accuracy\": 2,\n                    \"timestamp\": {\n                      \"value\": \"2015-06-04T07:20:27.378Z\",\n                      \"type\": \"DateTime\"\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"POST\",\n              \"uri\": \"/v2/op/query?limit=10&offset=20&orderBy=temperature,!speed\",\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              },\n              \"body\": \"{  \\\"entities\\\": [    {      \\\"idPattern\\\": \\\".*\\\",      \\\"type\\\": \\\"Room\\\"    },    {      \\\"id\\\": \\\"Car\\\",      \\\"type\\\": \\\"P-9873-K\\\"    }  ],  \\\"attrs\\\": [    \\\"temperature\\\",    \\\"humidity\\\"  ],  \\\"expression\\\": {     \\\"q\\\": \\\"temperature>20\\\"  },  \\\"metadata\\\": [    \\\"accuracy\\\",    \\\"timestamp\\\"  ]}\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"RAW\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              },\n              \"body\": \"[  {    \\\"type\\\": \\\"Room\\\",    \\\"id\\\": \\\"DC_S1-D41\\\",    \\\"temperature\\\": {      \\\"value\\\": 35.6,      \\\"type\\\": \\\"Number\\\"    }  },  {    \\\"type\\\": \\\"Room\\\",    \\\"id\\\": \\\"Boe-Idearium\\\",    \\\"temperature\\\": {      \\\"value\\\": 22.5,      \\\"type\\\": \\\"Number\\\"    }  },  {    \\\"type\\\": \\\"Car\\\",    \\\"id\\\": \\\"P-9873-K\\\",    \\\"temperature\\\": {      \\\"value\\\": 40,      \\\"type\\\": \\\"Number\\\",      \\\"accuracy\\\": 2,      \\\"timestamp\\\": {        \\\"value\\\": \\\"2015-06-04T07:20:27.378Z\\\",        \\\"type\\\": \\\"DateTime\\\"      }    }  }]\"\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"Query1\",\n            \"x-testDescription\": \"The response payload is an Array containing one object per matching entity, or an empty array `[]` if \\nno entities are found. The entities follow the JSON entity representation format\\n(described in the section \\\"JSON Entity Representation\\\").\\nThe payload may contain the following elements (all of them optional):\\n+ `entities`: a list of entites to search for. Each element is represented by a JSON object with the\\n  following elements:\\n    + `id` or `idPattern`: Id or pattern of the affected entities. Both cannot be used at the same\\n      time, but one of them must be present.\\n    + `type` or `typePattern`: Type or type pattern of the entities to search for. Both cannot be used at\\n      the same time. If omitted, it means \\\"any entity type\\\".\\n+ `attrs`: List of attributes to be provided (if not specified, all attributes).\\n+ `expression`: an expression composed of `q`, `mq`, `georel`, `geometry` and `coords` (see \\\"List\\n   entities\\\" operation above about this field).\\n+ `metadata`: a list of metadata names to include in the response.\\n   See \\\"Filtering out attributes and metadata\\\" section for more detail.\\nResponse code:\\n* Successful operation uses 200 OK\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/v2/op/notify\": {\n      \"post\": {\n        \"description\": \"This operation is intended to consume a notification payload so that all the entity data included by such notification is persisted, overwriting if necessary.\\nThis operation is useful when one NGSIv2 endpoint is subscribed to another NGSIv2 endpoint (federation scenarios). \\nThe request payload must be an NGSIv2 notification payload. \\nThe behaviour must be exactly the same as `POST /v2/op/update` with `actionType` equal to `append`.\\nResponse code:\\n* Successful operation uses 200 OK\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\",\n        \"summary\": \"Notify\",\n        \"tags\": [\n          \"Batch Operations\"\n        ],\n        \"operationId\": \"Notify\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"Content-Type\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"\"\n          },\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/NotifyRequest\"\n            }\n          },\n          {\n            \"name\": \"options\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"enum\": [\n              \"keyValues\"\n            ],\n            \"x-enum-elements\": [\n              {\n                \"name\": \"keyValues\",\n                \"description\": \"\"\n              }\n            ],\n            \"type\": \"string\",\n            \"description\": \"Options dictionary\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          }\n        },\n        \"x-unitTests\": [\n          {\n            \"request\": {\n              \"method\": \"POST\",\n              \"uri\": \"/v2/op/notify\",\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              },\n              \"body\": \"{  \\\"subscriptionId\\\": \\\"5aeb0ee97d4ef10a12a0262f\\\",  \\\"data\\\": [{    \\\"type\\\": \\\"Room\\\",    \\\"id\\\": \\\"DC_S1-D41\\\",    \\\"temperature\\\": {      \\\"value\\\": 35.6,      \\\"type\\\": \\\"Number\\\"    }  },  {    \\\"type\\\": \\\"Room\\\",    \\\"id\\\": \\\"Boe-Idearium\\\",    \\\"temperature\\\": {      \\\"value\\\": 22.5,      \\\"type\\\": \\\"Number\\\"    }  }]}\"\n            },\n            \"expectedResponse\": {\n              \"x-allowExtraHeaders\": true,\n              \"x-bodyMatchMode\": \"NONE\",\n              \"x-arrayOrderedMatching\": false,\n              \"x-arrayCheckCount\": false,\n              \"x-matchResponseSchema\": true,\n              \"headers\": {\n                \"Content-Type\": \"application/json\"\n              }\n            },\n            \"x-testShouldPass\": true,\n            \"x-testEnabled\": true,\n            \"x-testName\": \"Notify1\",\n            \"x-testDescription\": \"This operation is intended to consume a notification payload so that all the entity data included by such notification is persisted, overwriting if necessary.\\nThis operation is useful when one NGSIv2 endpoint is subscribed to another NGSIv2 endpoint (federation scenarios). \\nThe request payload must be an NGSIv2 notification payload. \\nThe behaviour must be exactly the same as `POST /v2/op/update` with `actionType` equal to `append`.\\nResponse code:\\n* Successful operation uses 200 OK\\n* Errors use a non-2xx and (optionally) an error payload. See subsection on \\\"Error Responses\\\" for\\n  more details.\"\n          }\n        ],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    }\n  },\n  \"definitions\": {\n    \"RetrieveApiResourcesResponse\": {\n      \"title\": \"Retrieve API Resources response\",\n      \"example\": {\n        \"entities_url\": \"/v2/entities\",\n        \"types_url\": \"/v2/types\",\n        \"subscriptions_url\": \"/v2/subscriptions\",\n        \"registrations_url\": \"/v2/registrations\"\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"entities_url\": {\n          \"description\": \"URL which points to the entities resource\",\n          \"example\": \"/v2/entities\",\n          \"type\": \"string\"\n        },\n        \"types_url\": {\n          \"description\": \"URL which points to the types resource\",\n          \"example\": \"/v2/types\",\n          \"type\": \"string\"\n        },\n        \"subscriptions_url\": {\n          \"description\": \"URL which points to the\\nsubscriptions resource\",\n          \"example\": \"/v2/subscriptions\",\n          \"type\": \"string\"\n        },\n        \"registrations_url\": {\n          \"description\": \"URL which points to the\\nregistrations resource\",\n          \"example\": \"/v2/registrations\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"entities_url\",\n        \"types_url\",\n        \"subscriptions_url\",\n        \"registrations_url\"\n      ]\n    },\n    \"Options\": {\n      \"title\": \"options\",\n      \"example\": \"count\",\n      \"x-enum-elements\": [\n        {\n          \"name\": \"count\",\n          \"description\": \"\"\n        },\n        {\n          \"name\": \"keyValues\",\n          \"description\": \"\"\n        },\n        {\n          \"name\": \"values\",\n          \"description\": \"\"\n        },\n        {\n          \"name\": \"unique\",\n          \"description\": \"\"\n        }\n      ],\n      \"type\": \"string\",\n      \"enum\": [\n        \"count\",\n        \"keyValues\",\n        \"values\",\n        \"unique\"\n      ]\n    },\n    \"ListEntitiesResponse\": {\n      \"title\": \"List Entities response\",\n      \"example\": {\n        \"type\": \"Room\",\n        \"id\": \"DC_S1-D41\",\n        \"temperature\": {\n          \"value\": 35.6,\n          \"type\": \"Number\",\n          \"metadata\": {}\n        }\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"type\": {\n          \"description\": \"\",\n          \"example\": \"Room\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"description\": \"\",\n          \"example\": \"DC_S1-D41\",\n          \"type\": \"string\"\n        },\n        \"temperature\": {\n          \"description\": \"\",\n          \"example\": {\n            \"value\": 35.6,\n            \"type\": \"Number\",\n            \"metadata\": {}\n          },\n          \"type\": \"object\"\n        },\n        \"speed\": {\n          \"description\": \"\",\n          \"example\": {\n            \"value\": 100,\n            \"type\": \"number\",\n            \"metadata\": {\n              \"accuracy\": {\n                \"value\": 2,\n                \"type\": \"Number\"\n              },\n              \"timestamp\": {\n                \"value\": \"2015-06-04T07:20:27.378Z\",\n                \"type\": \"DateTime\"\n              }\n            }\n          },\n          \"type\": \"object\"\n        }\n      },\n      \"required\": [\n        \"type\",\n        \"id\"\n      ]\n    },\n    \"Options3\": {\n      \"title\": \"options3\",\n      \"example\": \"keyValues\",\n      \"x-enum-elements\": [\n        {\n          \"name\": \"keyValues\",\n          \"description\": \"\"\n        },\n        {\n          \"name\": \"upsert\",\n          \"description\": \"\"\n        }\n      ],\n      \"type\": \"string\",\n      \"enum\": [\n        \"keyValues\",\n        \"upsert\"\n      ]\n    },\n    \"CreateEntityRequest\": {\n      \"title\": \"Create Entity request\",\n      \"example\": {\n        \"type\": \"Room\",\n        \"id\": \"Bcn-Welt\",\n        \"temperature\": {\n          \"value\": 21.7\n        },\n        \"humidity\": {\n          \"value\": 60\n        },\n        \"location\": {\n          \"value\": \"41.3763726, 2.1864475\",\n          \"type\": \"geo:point\",\n          \"metadata\": {\n            \"crs\": {\n              \"value\": \"WGS84\"\n            }\n          }\n        }\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"type\": {\n          \"description\": \"\",\n          \"example\": \"Room\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"description\": \"\",\n          \"example\": \"Bcn-Welt\",\n          \"type\": \"string\"\n        },\n        \"temperature\": {\n          \"description\": \"\",\n          \"example\": {\n            \"value\": 21.7\n          },\n          \"type\": \"object\"\n        },\n        \"humidity\": {\n          \"description\": \"\",\n          \"example\": {\n            \"value\": 60\n          },\n          \"type\": \"object\"\n        },\n        \"location\": {\n          \"description\": \"\",\n          \"example\": {\n            \"value\": \"41.3763726, 2.1864475\",\n            \"type\": \"geo:point\",\n            \"metadata\": {\n              \"crs\": {\n                \"value\": \"WGS84\"\n              }\n            }\n          },\n          \"type\": \"object\"\n        }\n      },\n      \"required\": [\n        \"type\",\n        \"id\",\n        \"temperature\",\n        \"humidity\",\n        \"location\"\n      ]\n    },\n    \"Options6\": {\n      \"title\": \"options6\",\n      \"example\": \"keyValues\",\n      \"x-enum-elements\": [\n        {\n          \"name\": \"keyValues\",\n          \"description\": \"\"\n        },\n        {\n          \"name\": \"values\",\n          \"description\": \"\"\n        },\n        {\n          \"name\": \"unique\",\n          \"description\": \"\"\n        }\n      ],\n      \"type\": \"string\",\n      \"enum\": [\n        \"keyValues\",\n        \"values\",\n        \"unique\"\n      ]\n    },\n    \"RetrieveEntityResponse\": {\n      \"title\": \"Retrieve Entity response\",\n      \"example\": {\n        \"type\": \"Room\",\n        \"id\": \"Bcn_Welt\",\n        \"temperature\": {\n          \"value\": 21.7,\n          \"type\": \"Number\"\n        },\n        \"humidity\": {\n          \"value\": 60,\n          \"type\": \"Number\"\n        },\n        \"location\": {\n          \"value\": \"41.3763726, 2.1864475\",\n          \"type\": \"geo:point\",\n          \"metadata\": {\n            \"crs\": {\n              \"value\": \"WGS84\",\n              \"type\": \"Text\"\n            }\n          }\n        }\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"type\": {\n          \"description\": \"\",\n          \"example\": \"Room\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"description\": \"\",\n          \"example\": \"Bcn_Welt\",\n          \"type\": \"string\"\n        },\n        \"temperature\": {\n          \"description\": \"\",\n          \"example\": {\n            \"value\": 21.7,\n            \"type\": \"Number\"\n          },\n          \"type\": \"object\"\n        },\n        \"humidity\": {\n          \"description\": \"\",\n          \"example\": {\n            \"value\": 60,\n            \"type\": \"Number\"\n          },\n          \"type\": \"object\"\n        },\n        \"location\": {\n          \"description\": \"\",\n          \"example\": {\n            \"value\": \"41.3763726, 2.1864475\",\n            \"type\": \"geo:point\",\n            \"metadata\": {\n              \"crs\": {\n                \"value\": \"WGS84\",\n                \"type\": \"Text\"\n              }\n            }\n          },\n          \"type\": \"object\"\n        }\n      },\n      \"required\": [\n        \"type\",\n        \"id\",\n        \"temperature\",\n        \"humidity\",\n        \"location\"\n      ]\n    },\n    \"RetrieveEntityAttributesResponse\": {\n      \"title\": \"Retrieve Entity Attributes response\",\n      \"example\": {\n        \"temperature\": {\n          \"value\": 21.7,\n          \"type\": \"Number\"\n        },\n        \"humidity\": {\n          \"value\": 60,\n          \"type\": \"Number\"\n        },\n        \"location\": {\n          \"value\": \"41.3763726, 2.1864475\",\n          \"type\": \"geo:point\",\n          \"metadata\": {\n            \"crs\": {\n              \"value\": \"WGS84\",\n              \"type\": \"Text\"\n            }\n          }\n        }\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"temperature\": {\n          \"description\": \"\",\n          \"example\": {\n            \"value\": 21.7,\n            \"type\": \"Number\"\n          },\n          \"type\": \"object\"\n        },\n        \"humidity\": {\n          \"description\": \"\",\n          \"example\": {\n            \"value\": 60,\n            \"type\": \"Number\"\n          },\n          \"type\": \"object\"\n        },\n        \"location\": {\n          \"description\": \"\",\n          \"example\": {\n            \"value\": \"41.3763726, 2.1864475\",\n            \"type\": \"geo:point\",\n            \"metadata\": {\n              \"crs\": {\n                \"value\": \"WGS84\",\n                \"type\": \"Text\"\n              }\n            }\n          },\n          \"type\": \"object\"\n        }\n      },\n      \"required\": [\n        \"temperature\",\n        \"humidity\",\n        \"location\"\n      ]\n    },\n    \"Options10\": {\n      \"title\": \"options10\",\n      \"example\": \"append\",\n      \"x-enum-elements\": [\n        {\n          \"name\": \"append\",\n          \"description\": \"\"\n        },\n        {\n          \"name\": \"keyValues\",\n          \"description\": \"\"\n        }\n      ],\n      \"type\": \"string\",\n      \"enum\": [\n        \"append\",\n        \"keyValues\"\n      ]\n    },\n    \"UpdateOrAppendEntityAttributesRequest\": {\n      \"title\": \"Update or Append Entity Attributes request\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"ambientNoise\": {\n          \"description\": \"\",\n          \"example\": {\n            \"value\": 31.5\n          },\n          \"type\": \"object\"\n        }\n      },\n      \"required\": [\n        \"ambientNoise\"\n      ]\n    },\n    \"Options12\": {\n      \"title\": \"options12\",\n      \"example\": \"keyValues\",\n      \"x-enum-elements\": [\n        {\n          \"name\": \"keyValues\",\n          \"description\": \"\"\n        }\n      ],\n      \"type\": \"string\",\n      \"enum\": [\n        \"keyValues\"\n      ]\n    },\n    \"UpdateExistingEntityAttributesRequest\": {\n      \"title\": \"Update Existing Entity Attributes request\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"temperature\": {\n          \"description\": \"\",\n          \"example\": {\n            \"value\": 25.5\n          },\n          \"type\": \"object\"\n        },\n        \"seatNumber\": {\n          \"description\": \"\",\n          \"example\": {\n            \"value\": 6\n          },\n          \"type\": \"object\"\n        }\n      },\n      \"required\": [\n        \"temperature\",\n        \"seatNumber\"\n      ]\n    },\n    \"ReplaceAllEntityAttributesRequest\": {\n      \"title\": \"Replace all entity attributes request\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"temperature\": {\n          \"description\": \"\",\n          \"example\": {\n            \"value\": 25.5\n          },\n          \"type\": \"object\"\n        },\n        \"seatNumber\": {\n          \"description\": \"\",\n          \"example\": {\n            \"value\": 6\n          },\n          \"type\": \"object\"\n        }\n      },\n      \"required\": [\n        \"temperature\",\n        \"seatNumber\"\n      ]\n    },\n    \"GetAttributeDataResponse\": {\n      \"title\": \"Get attribute data response\",\n      \"example\": {\n        \"value\": 21.7,\n        \"type\": \"Number\",\n        \"metadata\": {}\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"value\": {\n          \"description\": \"\",\n          \"example\": 21.7,\n          \"type\": \"number\",\n          \"format\": \"double\"\n        },\n        \"type\": {\n          \"description\": \"\",\n          \"example\": \"Number\",\n          \"type\": \"string\"\n        },\n        \"metadata\": {\n          \"description\": \"\",\n          \"example\": {},\n          \"type\": \"object\"\n        }\n      },\n      \"required\": [\n        \"value\",\n        \"type\",\n        \"metadata\"\n      ]\n    },\n    \"UpdateAttributeDataRequest\": {\n      \"title\": \"Update Attribute Data request\",\n      \"example\": {\n        \"value\": 25.0,\n        \"metadata\": {\n          \"unitCode\": {\n            \"value\": \"CEL\"\n          }\n        }\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"value\": {\n          \"description\": \"\",\n          \"example\": 25,\n          \"type\": \"number\",\n          \"format\": \"double\"\n        },\n        \"metadata\": {\n          \"description\": \"\",\n          \"example\": {\n            \"unitCode\": {\n              \"value\": \"CEL\"\n            }\n          },\n          \"type\": \"object\"\n        }\n      },\n      \"required\": [\n        \"value\",\n        \"metadata\"\n      ]\n    },\n    \"GetAttributeValueResponse\": {\n      \"title\": \"Get Attribute Value response\",\n      \"example\": {\n        \"address\": \"Ronda de la Comunicacion s/n\",\n        \"zipCode\": 28050,\n        \"city\": \"Madrid\",\n        \"country\": \"Spain\"\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"address\": {\n          \"description\": \"\",\n          \"example\": \"Ronda de la Comunicacion s/n\",\n          \"type\": \"string\"\n        },\n        \"zipCode\": {\n          \"description\": \"\",\n          \"example\": 28050,\n          \"type\": \"integer\",\n          \"format\": \"int32\"\n        },\n        \"city\": {\n          \"description\": \"\",\n          \"example\": \"Madrid\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"description\": \"\",\n          \"example\": \"Spain\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"address\",\n        \"zipCode\",\n        \"city\",\n        \"country\"\n      ]\n    },\n    \"UpdateAttributeValueRequest\": {\n      \"title\": \"Update Attribute Value request\",\n      \"example\": {\n        \"address\": \"Ronda de la Comunicacion s/n\",\n        \"zipCode\": 28050,\n        \"city\": \"Madrid\",\n        \"country\": \"Spain\"\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"address\": {\n          \"description\": \"\",\n          \"example\": \"Ronda de la Comunicacion s/n\",\n          \"type\": \"string\"\n        },\n        \"zipCode\": {\n          \"description\": \"\",\n          \"example\": 28050,\n          \"type\": \"integer\",\n          \"format\": \"int32\"\n        },\n        \"city\": {\n          \"description\": \"\",\n          \"example\": \"Madrid\",\n          \"type\": \"string\"\n        },\n        \"country\": {\n          \"description\": \"\",\n          \"example\": \"Spain\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"address\",\n        \"zipCode\",\n        \"city\",\n        \"country\"\n      ]\n    },\n    \"Options20\": {\n      \"title\": \"options20\",\n      \"example\": \"count\",\n      \"x-enum-elements\": [\n        {\n          \"name\": \"count\",\n          \"description\": \"\"\n        },\n        {\n          \"name\": \"values\",\n          \"description\": \"\"\n        }\n      ],\n      \"type\": \"string\",\n      \"enum\": [\n        \"count\",\n        \"values\"\n      ]\n    },\n    \"ListEntityTypesResponse\": {\n      \"title\": \"List Entity Types response\",\n      \"example\": {\n        \"type\": \"Car\",\n        \"attrs\": {\n          \"speed\": {\n            \"types\": [\n              \"Number\"\n            ]\n          },\n          \"fuel\": {\n            \"types\": [\n              \"gasoline\",\n              \"diesel\"\n            ]\n          },\n          \"temperature\": {\n            \"types\": [\n              \"urn:phenomenum:temperature\"\n            ]\n          }\n        },\n        \"count\": 12\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"type\": {\n          \"description\": \"\",\n          \"example\": \"Car\",\n          \"type\": \"string\"\n        },\n        \"attrs\": {\n          \"description\": \"\",\n          \"example\": {\n            \"speed\": {\n              \"types\": [\n                \"Number\"\n              ]\n            },\n            \"fuel\": {\n              \"types\": [\n                \"gasoline\",\n                \"diesel\"\n              ]\n            },\n            \"temperature\": {\n              \"types\": [\n                \"urn:phenomenum:temperature\"\n              ]\n            }\n          },\n          \"type\": \"object\"\n        },\n        \"count\": {\n          \"description\": \"\",\n          \"example\": 12,\n          \"type\": \"integer\",\n          \"format\": \"int32\"\n        }\n      },\n      \"required\": [\n        \"type\",\n        \"attrs\",\n        \"count\"\n      ]\n    },\n    \"RetrieveEntityTypeResponse\": {\n      \"title\": \"Retrieve entity type response\",\n      \"example\": {\n        \"attrs\": {\n          \"pressure\": {\n            \"types\": [\n              \"Number\"\n            ]\n          },\n          \"humidity\": {\n            \"types\": [\n              \"percentage\"\n            ]\n          },\n          \"temperature\": {\n            \"types\": [\n              \"urn:phenomenum:temperature\"\n            ]\n          }\n        },\n        \"count\": 7\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"attrs\": {\n          \"description\": \"\",\n          \"example\": {\n            \"pressure\": {\n              \"types\": [\n                \"Number\"\n              ]\n            },\n            \"humidity\": {\n              \"types\": [\n                \"percentage\"\n              ]\n            },\n            \"temperature\": {\n              \"types\": [\n                \"urn:phenomenum:temperature\"\n              ]\n            }\n          },\n          \"type\": \"object\"\n        },\n        \"count\": {\n          \"description\": \"\",\n          \"example\": 7,\n          \"type\": \"integer\",\n          \"format\": \"int32\"\n        }\n      },\n      \"required\": [\n        \"attrs\",\n        \"count\"\n      ]\n    },\n    \"Options23\": {\n      \"title\": \"options23\",\n      \"example\": \"count\",\n      \"x-enum-elements\": [\n        {\n          \"name\": \"count\",\n          \"description\": \"\"\n        }\n      ],\n      \"type\": \"string\",\n      \"enum\": [\n        \"count\"\n      ]\n    },\n    \"ListSubscriptionsResponse\": {\n      \"title\": \"List Subscriptions response\",\n      \"example\": {\n        \"id\": \"abcdefg\",\n        \"description\": \"One subscription to rule them all\",\n        \"subject\": {\n          \"entities\": [\n            {\n              \"id\": \"Bcn_Welt\",\n              \"type\": \"Room\"\n            }\n          ],\n          \"condition\": {\n            \"attrs\": [\n              \"temperature \"\n            ],\n            \"expression\": {\n              \"q\": \"temperature>40\"\n            }\n          }\n        },\n        \"notification\": {\n          \"httpCustom\": {\n            \"url\": \"http://localhost:1234\",\n            \"headers\": {\n              \"X-MyHeader\": \"foo\"\n            },\n            \"qs\": {\n              \"authToken\": \"bar\"\n            }\n          },\n          \"attrsFormat\": \"keyValues\",\n          \"attrs\": [\n            \"temperature\",\n            \"humidity\"\n          ],\n          \"timesSent\": 12,\n          \"lastNotification\": \"2015-10-05T16:00:00Z\",\n          \"lastFailure\": \"2015-10-06T16:00:00Z\"\n        },\n        \"expires\": \"2016-04-05T14:00:00Z\",\n        \"status\": \"failed\",\n        \"throttling\": 5\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"\",\n          \"example\": \"abcdefg\",\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"description\": \"\",\n          \"example\": \"One subscription to rule them all\",\n          \"type\": \"string\"\n        },\n        \"subject\": {\n          \"description\": \"\",\n          \"example\": {\n            \"entities\": [\n              {\n                \"id\": \"Bcn_Welt\",\n                \"type\": \"Room\"\n              }\n            ],\n            \"condition\": {\n              \"attrs\": [\n                \"temperature \"\n              ],\n              \"expression\": {\n                \"q\": \"temperature>40\"\n              }\n            }\n          },\n          \"type\": \"object\"\n        },\n        \"notification\": {\n          \"description\": \"\",\n          \"example\": {\n            \"httpCustom\": {\n              \"url\": \"http://localhost:1234\",\n              \"headers\": {\n                \"X-MyHeader\": \"foo\"\n              },\n              \"qs\": {\n                \"authToken\": \"bar\"\n              }\n            },\n            \"attrsFormat\": \"keyValues\",\n            \"attrs\": [\n              \"temperature\",\n              \"humidity\"\n            ],\n            \"timesSent\": 12,\n            \"lastNotification\": \"2015-10-05T16:00:00Z\",\n            \"lastFailure\": \"2015-10-06T16:00:00Z\"\n          },\n          \"type\": \"object\"\n        },\n        \"expires\": {\n          \"description\": \"\",\n          \"example\": \"4/5/2016 2:00:00 PM\",\n          \"type\": \"string\"\n        },\n        \"status\": {\n          \"description\": \"\",\n          \"example\": \"failed\",\n          \"type\": \"string\"\n        },\n        \"throttling\": {\n          \"description\": \"\",\n          \"example\": 5,\n          \"type\": \"integer\",\n          \"format\": \"int32\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"description\",\n        \"subject\",\n        \"notification\",\n        \"expires\",\n        \"status\",\n        \"throttling\"\n      ]\n    },\n    \"CreateSubscriptionRequest\": {\n      \"title\": \"Create Subscription request\",\n      \"example\": {\n        \"description\": \"One subscription to rule them all\",\n        \"subject\": {\n          \"entities\": [\n            {\n              \"idPattern\": \".*\",\n              \"type\": \"Room\"\n            }\n          ],\n          \"condition\": {\n            \"attrs\": [\n              \"temperature\"\n            ],\n            \"expression\": {\n              \"q\": \"temperature>40\"\n            }\n          }\n        },\n        \"notification\": {\n          \"http\": {\n            \"url\": \"http://localhost:1234\"\n          },\n          \"attrs\": [\n            \"temperature\",\n            \"humidity\"\n          ]\n        },\n        \"expires\": \"2016-04-05T14:00:00Z\",\n        \"throttling\": 5\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"description\": {\n          \"description\": \"\",\n          \"example\": \"One subscription to rule them all\",\n          \"type\": \"string\"\n        },\n        \"subject\": {\n          \"description\": \"\",\n          \"example\": {\n            \"entities\": [\n              {\n                \"idPattern\": \".*\",\n                \"type\": \"Room\"\n              }\n            ],\n            \"condition\": {\n              \"attrs\": [\n                \"temperature\"\n              ],\n              \"expression\": {\n                \"q\": \"temperature>40\"\n              }\n            }\n          },\n          \"type\": \"object\"\n        },\n        \"notification\": {\n          \"description\": \"\",\n          \"example\": {\n            \"http\": {\n              \"url\": \"http://localhost:1234\"\n            },\n            \"attrs\": [\n              \"temperature\",\n              \"humidity\"\n            ]\n          },\n          \"type\": \"object\"\n        },\n        \"expires\": {\n          \"description\": \"\",\n          \"example\": \"4/5/2016 2:00:00 PM\",\n          \"type\": \"string\"\n        },\n        \"throttling\": {\n          \"description\": \"\",\n          \"example\": 5,\n          \"type\": \"integer\",\n          \"format\": \"int32\"\n        }\n      },\n      \"required\": [\n        \"subject\",\n        \"notification\"\n      ]\n    },\n    \"UpdateSubscriptionRequest\": {\n      \"title\": \"Update Subscription request\",\n      \"example\": {\n        \"expires\": \"2016-04-05T14:00:00Z\"\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"expires\": {\n          \"description\": \"\",\n          \"example\": \"4/5/2016 2:00:00 PM\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"expires\"\n      ]\n    },\n    \"ListRegistrationsResponse\": {\n      \"title\": \"List Registrations response\",\n      \"example\": {\n        \"id\": \"abcdefg\",\n        \"description\": \"Example Context Source\",\n        \"dataProvided\": {\n          \"entities\": [\n            {\n              \"id\": \"Bcn_Welt\",\n              \"type\": \"Room\"\n            }\n          ],\n          \"attrs\": [\n            \"temperature\"\n          ]\n        },\n        \"provider\": {\n          \"http\": {\n            \"url\": \"http://contextsource.example.org\"\n          },\n          \"supportedForwardingMode\": \"all\"\n        },\n        \"expires\": \"2017-10-31T12:00:00\",\n        \"status\": \"active\",\n        \"forwardingInformation\": {\n          \"timesSent\": 12,\n          \"lastForwarding\": \"2017-10-06T16:00:00Z\",\n          \"lastSuccess\": \"2017-10-06T16:00:00Z\",\n          \"lastFailure\": \"2017-10-05T16:00:00Z\"\n        }\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"\",\n          \"example\": \"abcdefg\",\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"description\": \"\",\n          \"example\": \"Example Context Source\",\n          \"type\": \"string\"\n        },\n        \"dataProvided\": {\n          \"description\": \"\",\n          \"example\": {\n            \"entities\": [\n              {\n                \"id\": \"Bcn_Welt\",\n                \"type\": \"Room\"\n              }\n            ],\n            \"attrs\": [\n              \"temperature\"\n            ]\n          },\n          \"type\": \"object\"\n        },\n        \"provider\": {\n          \"description\": \"\",\n          \"example\": {\n            \"http\": {\n              \"url\": \"http://contextsource.example.org\"\n            },\n            \"supportedForwardingMode\": \"all\"\n          },\n          \"type\": \"object\"\n        },\n        \"expires\": {\n          \"description\": \"\",\n          \"example\": \"10/31/2017 12:00:00 PM\",\n          \"type\": \"string\"\n        },\n        \"status\": {\n          \"description\": \"\",\n          \"example\": \"active\",\n          \"type\": \"string\"\n        },\n        \"forwardingInformation\": {\n          \"description\": \"\",\n          \"example\": {\n            \"timesSent\": 12,\n            \"lastForwarding\": \"2017-10-06T16:00:00Z\",\n            \"lastSuccess\": \"2017-10-06T16:00:00Z\",\n            \"lastFailure\": \"2017-10-05T16:00:00Z\"\n          },\n          \"type\": \"object\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"description\",\n        \"dataProvided\",\n        \"provider\",\n        \"expires\",\n        \"status\",\n        \"forwardingInformation\"\n      ]\n    },\n    \"CreateRegistrationRequest\": {\n      \"title\": \"Create Registration request\",\n      \"example\": {\n        \"description\": \"Relative Humidity Context Source\",\n        \"dataProvided\": {\n          \"entities\": [\n            {\n              \"id\": \"room2\",\n              \"type\": \"Room\"\n            }\n          ],\n          \"attrs\": [\n            \"relativeHumidity\"\n          ]\n        },\n        \"provider\": {\n          \"http\": {\n            \"url\": \"http://localhost:1234\"\n          }\n        }\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"description\": {\n          \"description\": \"\",\n          \"example\": \"Relative Humidity Context Source\",\n          \"type\": \"string\"\n        },\n        \"dataProvided\": {\n          \"description\": \"\",\n          \"example\": {\n            \"entities\": [\n              {\n                \"id\": \"room2\",\n                \"type\": \"Room\"\n              }\n            ],\n            \"attrs\": [\n              \"relativeHumidity\"\n            ]\n          },\n          \"type\": \"object\"\n        },\n        \"provider\": {\n          \"description\": \"\",\n          \"example\": {\n            \"http\": {\n              \"url\": \"http://localhost:1234\"\n            }\n          },\n          \"type\": \"object\"\n        }\n      },\n      \"required\": [\n        \"description\",\n        \"dataProvided\",\n        \"provider\"\n      ]\n    },\n    \"RetrieveRegistrationResponse\": {\n      \"title\": \"Retrieve Registration response\",\n      \"example\": {\n        \"id\": \"abcdefg\",\n        \"description\": \"Example Context Source\",\n        \"dataProvided\": {\n          \"entities\": [\n            {\n              \"id\": \"Bcn_Welt\",\n              \"type\": \"Room\"\n            }\n          ],\n          \"attrs\": [\n            \"temperature\"\n          ]\n        },\n        \"provider\": {\n          \"http\": {\n            \"url\": \"http://contextsource.example.org\"\n          },\n          \"supportedForwardingMode\": \"all\"\n        },\n        \"expires\": \"2017-10-31T12:00:00\",\n        \"status\": \"failed\",\n        \"forwardingInformation\": {\n          \"timesSent\": 12,\n          \"lastForwarding\": \"2017-10-06T16:00:00Z\",\n          \"lastFailure\": \"2017-10-06T16:00:00Z\",\n          \"lastSuccess\": \"2017-10-05T18:25:00Z\"\n        }\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"\",\n          \"example\": \"abcdefg\",\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"description\": \"\",\n          \"example\": \"Example Context Source\",\n          \"type\": \"string\"\n        },\n        \"dataProvided\": {\n          \"description\": \"\",\n          \"example\": {\n            \"entities\": [\n              {\n                \"id\": \"Bcn_Welt\",\n                \"type\": \"Room\"\n              }\n            ],\n            \"attrs\": [\n              \"temperature\"\n            ]\n          },\n          \"type\": \"object\"\n        },\n        \"provider\": {\n          \"description\": \"\",\n          \"example\": {\n            \"http\": {\n              \"url\": \"http://contextsource.example.org\"\n            },\n            \"supportedForwardingMode\": \"all\"\n          },\n          \"type\": \"object\"\n        },\n        \"expires\": {\n          \"description\": \"\",\n          \"example\": \"10/31/2017 12:00:00 PM\",\n          \"type\": \"string\"\n        },\n        \"status\": {\n          \"description\": \"\",\n          \"example\": \"failed\",\n          \"type\": \"string\"\n        },\n        \"forwardingInformation\": {\n          \"description\": \"\",\n          \"example\": {\n            \"timesSent\": 12,\n            \"lastForwarding\": \"2017-10-06T16:00:00Z\",\n            \"lastFailure\": \"2017-10-06T16:00:00Z\",\n            \"lastSuccess\": \"2017-10-05T18:25:00Z\"\n          },\n          \"type\": \"object\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"description\",\n        \"dataProvided\",\n        \"provider\",\n        \"expires\",\n        \"status\",\n        \"forwardingInformation\"\n      ]\n    },\n    \"UpdateRegistrationRequest\": {\n      \"title\": \"Update Registration request\",\n      \"example\": {\n        \"expires\": \"2017-10-04T00:00:00\"\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"expires\": {\n          \"description\": \"\",\n          \"example\": \"10/4/2017 12:00:00 AM\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"expires\"\n      ]\n    },\n    \"UpdateRequest\": {\n      \"title\": \"Update request\",\n      \"example\": {\n        \"actionType\": \"append\",\n        \"entities\": [\n          {\n            \"type\": \"Room\",\n            \"id\": \"Bcn-Welt\",\n            \"temperature\": {\n              \"value\": 21.7\n            },\n            \"humidity\": {\n              \"value\": 60\n            }\n          },\n          {\n            \"type\": \"Room\",\n            \"id\": \"Mad_Aud\",\n            \"temperature\": {\n              \"value\": 22.9\n            },\n            \"humidity\": {\n              \"value\": 85\n            }\n          }\n        ]\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"actionType\": {\n          \"description\": \"\",\n          \"example\": \"append\",\n          \"type\": \"string\"\n        },\n        \"entities\": {\n          \"description\": \"\",\n          \"example\": [\n            {\n              \"type\": \"Room\",\n              \"id\": \"Bcn-Welt\",\n              \"temperature\": {\n                \"value\": 21.7\n              },\n              \"humidity\": {\n                \"value\": 60\n              }\n            },\n            {\n              \"type\": \"Room\",\n              \"id\": \"Mad_Aud\",\n              \"temperature\": {\n                \"value\": 22.9\n              },\n              \"humidity\": {\n                \"value\": 85\n              }\n            }\n          ],\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\"\n          }\n        }\n      },\n      \"required\": [\n        \"actionType\",\n        \"entities\"\n      ]\n    },\n    \"QueryRequest\": {\n      \"title\": \"Query request\",\n      \"example\": {\n        \"entities\": [\n          {\n            \"idPattern\": \".*\",\n            \"type\": \"Room\"\n          },\n          {\n            \"id\": \"Car\",\n            \"type\": \"P-9873-K\"\n          }\n        ],\n        \"attrs\": [\n          \"temperature\",\n          \"humidity\"\n        ],\n        \"expression\": {\n          \"q\": \"temperature>20\"\n        },\n        \"metadata\": [\n          \"accuracy\",\n          \"timestamp\"\n        ]\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"entities\": {\n          \"description\": \"\",\n          \"example\": [\n            {\n              \"idPattern\": \".*\",\n              \"type\": \"Room\"\n            },\n            {\n              \"id\": \"Car\",\n              \"type\": \"P-9873-K\"\n            }\n          ],\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\"\n          }\n        },\n        \"attrs\": {\n          \"description\": \"\",\n          \"example\": [\n            \"temperature\",\n            \"humidity\"\n          ],\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"expression\": {\n          \"description\": \"\",\n          \"example\": {\n            \"q\": \"temperature>20\"\n          },\n          \"type\": \"object\"\n        },\n        \"metadata\": {\n          \"description\": \"\",\n          \"example\": [\n            \"accuracy\",\n            \"timestamp\"\n          ],\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"required\": [\n        \"entities\",\n        \"attrs\",\n        \"expression\",\n        \"metadata\"\n      ]\n    },\n    \"QueryResponse\": {\n      \"title\": \"Query response\",\n      \"example\": {\n        \"type\": \"Room\",\n        \"id\": \"DC_S1-D41\",\n        \"temperature\": {\n          \"value\": 35.6,\n          \"type\": \"Number\"\n        }\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"type\": {\n          \"description\": \"\",\n          \"example\": \"Room\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"description\": \"\",\n          \"example\": \"DC_S1-D41\",\n          \"type\": \"string\"\n        },\n        \"temperature\": {\n          \"description\": \"\",\n          \"example\": {\n            \"value\": 35.6,\n            \"type\": \"Number\"\n          },\n          \"type\": \"object\"\n        }\n      },\n      \"required\": [\n        \"type\",\n        \"id\",\n        \"temperature\"\n      ]\n    },\n    \"NotifyRequest\": {\n      \"title\": \"Notify request\",\n      \"example\": {\n        \"subscriptionId\": \"5aeb0ee97d4ef10a12a0262f\",\n        \"data\": [\n          {\n            \"type\": \"Room\",\n            \"id\": \"DC_S1-D41\",\n            \"temperature\": {\n              \"value\": 35.6,\n              \"type\": \"Number\"\n            }\n          },\n          {\n            \"type\": \"Room\",\n            \"id\": \"Boe-Idearium\",\n            \"temperature\": {\n              \"value\": 22.5,\n              \"type\": \"Number\"\n            }\n          }\n        ]\n      },\n      \"type\": \"object\",\n      \"properties\": {\n        \"subscriptionId\": {\n          \"description\": \"\",\n          \"example\": \"5aeb0ee97d4ef10a12a0262f\",\n          \"type\": \"string\"\n        },\n        \"data\": {\n          \"description\": \"\",\n          \"example\": [\n            {\n              \"type\": \"Room\",\n              \"id\": \"DC_S1-D41\",\n              \"temperature\": {\n                \"value\": 35.6,\n                \"type\": \"Number\"\n              }\n            },\n            {\n              \"type\": \"Room\",\n              \"id\": \"Boe-Idearium\",\n              \"temperature\": {\n                \"value\": 22.5,\n                \"type\": \"Number\"\n              }\n            }\n          ],\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\"\n          }\n        }\n      },\n      \"required\": [\n        \"subscriptionId\",\n        \"data\"\n      ]\n    }\n  }\n}\n