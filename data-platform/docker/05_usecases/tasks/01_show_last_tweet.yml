---
- name: Create private show-tweet network
  docker_network:
    name: show-tweet
    driver: bridge
    state: present

# Create data volumes for nodered containers
- name: Create volume nr-show-tweet-data
  docker_volume:
    name: "nr-show-tweet-data"

# Create settings file, used for all nodered containers
- name: Ensure remote directory exists for Nodered Settings
  file:
    path: /opt/scp/ansible/nodered
    recurse: yes
    state: directory
    mode: '0755'

- name: Create Nodered Settings show-tweet
  template:
    src: nodered/settings.js.j2
    dest: /opt/scp/ansible/nodered/show-tweet-settings.js
    owner: '{{ CREATE_USER }}'
    mode: '0755'

# Create show-tweet container
- name: Deploy without project set
  docker_container:
    name: nr-show-tweet
    image: nodered/node-red:1.2.9
    restart_policy: always
    volumes:
      - nr-show-tweet-data:/data
      - /opt/scp/ansible/nodered/show-tweet-settings.js:/data/settings.js
    networks:
      - name: "public"
      - name: "show-tweet"
    networks_cli_compatible: yes
    purge_networks: yes
    network_mode: "public"
    state: started
    labels:
      com.docker.compose.project: "show-tweet"

- name: Clone Repo to nr-show-tweet container
  command: docker exec nr-show-tweet bash -l -c "rm -rf /data/node_modules;rm -rf /data/projects/{{ NR_REPO_TARGET_FOLDER }};git clone https://{{ NR_GIT_LOGIN }}:{{ NR_GIT_TOKEN }}@{{ TWITTER_FLOW_PROJECT }} /data/projects/{{ NR_REPO_TARGET_FOLDER }}"  # noqa 204
  changed_when: True

- name: Install modules for nr-show-tweet
  command: docker exec nr-show-tweet bash -l -c "cd /data/projects/{{ NR_REPO_TARGET_FOLDER }}; npm install"
  changed_when: True

# - name: Link node_modules directory for nr-show-tweet
#   command: docker exec nr-show-tweet bash -l -c "ln -s -b /data/projects/{{ NR_REPO_TARGET_FOLDER }}/node_modules /data/"
#   changed_when: True

- name: Deploy nr-show-tweet with cloned project set
  docker_container:
    name: nr-show-tweet
    image: nodered/node-red:1.2.9
    restart_policy: always
    env:
      FLOWS: "{{ NR_REPO_TARGET_FOLDER }}"
      SC_ORION_SERVER: "http://orion-v2:1026"
      SC_FROST_SERVER: "http://frost:8080"
      DM_QL_SERVER: "http://quantumleap:8668"
      #EXT_MQTT_SERVER: ""
      EXT_MQTT_PORT: "1884"
      TWITTER_ID: "{{ TWITTER_ID }}"
      TWITTER_BEARER_TOKEN: "{{ TWITTER_BEARER_TOKEN }}"
    volumes:
      - nr-show-tweet-data:/data
      - /opt/scp/ansible/nodered/show-tweet-settings.js:/data/settings.js
    networks:
      - name: "public"
      - name: "show-tweet"
    networks_cli_compatible: yes
    purge_networks: yes
    network_mode: "public"
    state: started
    restart: yes
    labels:
      com.docker.compose.project: "show-tweet"

- name: Deploy Keycloak Gatekeeper for nr-show-tweet
  docker_container:
    name: nr-show-tweet-kc
    image: keycloak/keycloak-gatekeeper:7.0.0
    restart_policy: always
    entrypoint:
      - /opt/keycloak-gatekeeper
      - --discovery-url=https://idm.{{ DOMAIN }}/auth/realms/{{ IDM_REALM }}
      - --client-id={{ IDM_CLIENT }}
      - --client-secret={{ IDM_CLIENT_SECRET }}
      - --listen=0.0.0.0:3000
      - --redirection-url=https://nr-admin-show-tweet.{{ DOMAIN }}
      - --enable-refresh-tokens=true
      - --upstream-url=http://nr-show-tweet:1880
      - --encryption-key={{ AUTH_ENCRYPTION_KEY }}
    networks:
      - name: "public"
    networks_cli_compatible: yes
    purge_networks: yes
    network_mode: "public"
    state: started
    labels:
      com.docker.compose.project: "public"
      traefik.enable: "true"
      traefik.docker.network: "public"
      # Nodered Admin
      traefik.http.routers.nr-show-tweet-kc.rule: "Host(`nr-admin-show-tweet.{{ DOMAIN }}`)"
      traefik.http.routers.nr-show-tweet-kc.entrypoints: "websecure"
      traefik.http.routers.nr-show-tweet-kc.service: "nr-show-tweet-kc"
      traefik.http.routers.nr-show-tweet-kc.tls: "true"
      traefik.http.routers.nr-show-tweet-kc.tls.certresolver: "le"
      traefik.http.services.nr-show-tweet-kc.loadbalancer.server.port: "3000"

# Deploy Grafana Dashboard
- name: Ensure remote temp directory exists
  file:
    path: /opt/scp/ansible/grafana/monitoring/provisioning/dashboards/temp/
    recurse: yes
    state: directory
    mode: '0755'

- name: Create grafana dashboard from template
  copy:
    src: grafana/dashboards/01_tsdb_twitter.json
    dest: /opt/scp/ansible/grafana/monitoring/provisioning/dashboards/temp/01_tsdb_twitter.json
    mode: '0666'

- name: (Re-)Import Grafana Dashboard
  community.grafana.grafana_dashboard:
        grafana_url: https://grafana.{{ DOMAIN }}
        url_username: admin
        url_password: "{{ GRAFANA_ADMIN_PASSWORD }}"
        state: present
        commit_message: Updated by ansible
        overwrite: yes
        path: /opt/scp/ansible/grafana/monitoring/provisioning/dashboards/temp/01_tsdb_twitter.json